{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://azure.local/"
        },
        {
            "url": "{Endpoint}/face/v1.0",
            "variables": {
                "Endpoint": {
                    "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
                    "x-ms-parameter-location": "client",
                    "x-ms-skip-url-encoding": true,
                    "default": ""
                }
            }
        }
    ],
    "info": {
        "description": "An API for face detection, verification, and identification.",
        "title": "Face Client",
        "version": "1.0",
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
        },
        "x-origin": [
            {
                "format": "swagger",
                "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/Face/stable/v1.0/Face.json",
                "version": "2.0"
            }
        ],
        "x-preferred": true,
        "x-providerName": "azure.com",
        "x-serviceName": "cognitiveservices-Face",
        "x-tags": [
            "Azure",
            "Microsoft"
        ]
    },
    "security": [
        {
            "apim_key": []
        }
    ],
    "paths": {
        "/detect": {
            "post": {
                "description": "Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.",
                "operationId": "Face_DetectWithUrl",
                "parameters": [
                    {
                        "description": "A value indicating whether the operation should return faceIds of detected faces.",
                        "in": "query",
                        "name": "returnFaceId",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "description": "A value indicating whether the operation should return landmarks of the detected faces.",
                        "in": "query",
                        "name": "returnFaceLandmarks",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "description": "Analyze and return the one or more specified face attributes in the comma-separated string like \"returnFaceAttributes=age,gender\". Supported face attributes include age, gender, headPose, smile, facialHair, glasses and emotion. Note that each face attribute analysis has additional computational and time cost.",
                        "in": "query",
                        "name": "returnFaceAttributes",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "age",
                                    "gender",
                                    "headPose",
                                    "smile",
                                    "facialHair",
                                    "glasses",
                                    "emotion",
                                    "hair",
                                    "makeup",
                                    "occlusion",
                                    "accessories",
                                    "blur",
                                    "exposure",
                                    "noise"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "FaceAttributeType"
                                },
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of face entries ranked by face rectangle size in descending order. An empty response indicates no faces detected.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Detected Face object.",
                                        "properties": {
                                            "faceAttributes": {
                                                "description": "Face Attributes",
                                                "properties": {
                                                    "accessories": {
                                                        "description": "Properties describing any accessories on a given face.",
                                                        "items": {
                                                            "description": "Accessory item and corresponding confidence level.",
                                                            "properties": {
                                                                "confidence": {
                                                                    "description": "Confidence level of an accessory",
                                                                    "maximum": 1,
                                                                    "minimum": 0,
                                                                    "type": "number",
                                                                    "nullable": false
                                                                },
                                                                "type": {
                                                                    "description": "Type of an accessory",
                                                                    "enum": [
                                                                        "headWear",
                                                                        "glasses",
                                                                        "mask"
                                                                    ],
                                                                    "type": "string",
                                                                    "x-ms-enum": {
                                                                        "modelAsString": false,
                                                                        "name": "AccessoryType"
                                                                    },
                                                                    "nullable": false
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "age": {
                                                        "description": "Age in years",
                                                        "type": "number"
                                                    },
                                                    "blur": {
                                                        "description": "Properties describing any presence of blur within the image.",
                                                        "properties": {
                                                            "blurLevel": {
                                                                "description": "An enum value indicating level of blurriness.",
                                                                "enum": [
                                                                    "Low",
                                                                    "Medium",
                                                                    "High"
                                                                ],
                                                                "type": "string",
                                                                "x-ms-enum": {
                                                                    "modelAsString": false,
                                                                    "name": "BlurLevel"
                                                                },
                                                                "nullable": false
                                                            },
                                                            "value": {
                                                                "description": "A number indicating level of blurriness ranging from 0 to 1.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "emotion": {
                                                        "description": "Properties describing facial emotion in form of confidence ranging from 0 to 1.",
                                                        "properties": {
                                                            "anger": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "contempt": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "disgust": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "fear": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "happiness": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "neutral": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "sadness": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "surprise": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "exposure": {
                                                        "description": "Properties describing exposure level of the image.",
                                                        "properties": {
                                                            "exposureLevel": {
                                                                "description": "An enum value indicating level of exposure.",
                                                                "enum": [
                                                                    "UnderExposure",
                                                                    "GoodExposure",
                                                                    "OverExposure"
                                                                ],
                                                                "type": "string",
                                                                "x-ms-enum": {
                                                                    "modelAsString": false,
                                                                    "name": "ExposureLevel"
                                                                },
                                                                "nullable": false
                                                            },
                                                            "value": {
                                                                "description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "facialHair": {
                                                        "description": "Properties describing facial hair attributes.",
                                                        "properties": {
                                                            "beard": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "moustache": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "sideburns": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "gender": {
                                                        "description": "Possible gender of the face.",
                                                        "enum": [
                                                            "male",
                                                            "female"
                                                        ],
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "Gender"
                                                        }
                                                    },
                                                    "glasses": {
                                                        "description": "Glasses type if any of the face.",
                                                        "enum": [
                                                            "noGlasses",
                                                            "readingGlasses",
                                                            "sunglasses",
                                                            "swimmingGoggles"
                                                        ],
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "GlassesType"
                                                        }
                                                    },
                                                    "hair": {
                                                        "description": "Properties describing hair attributes.",
                                                        "properties": {
                                                            "bald": {
                                                                "description": "A number describing confidence level of whether the person is bald.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "hairColor": {
                                                                "description": "An array of candidate colors and confidence level in the presence of each.",
                                                                "items": {
                                                                    "description": "Hair color and associated confidence",
                                                                    "properties": {
                                                                        "color": {
                                                                            "description": "Name of the hair color.",
                                                                            "enum": [
                                                                                "unknown",
                                                                                "white",
                                                                                "gray",
                                                                                "blond",
                                                                                "brown",
                                                                                "red",
                                                                                "black",
                                                                                "other"
                                                                            ],
                                                                            "type": "string",
                                                                            "x-ms-enum": {
                                                                                "modelAsString": false,
                                                                                "name": "HairColorType"
                                                                            },
                                                                            "nullable": false
                                                                        },
                                                                        "confidence": {
                                                                            "description": "Confidence level of the color",
                                                                            "maximum": 1,
                                                                            "minimum": 0,
                                                                            "type": "number",
                                                                            "nullable": false
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "invisible": {
                                                                "description": "A boolean value describing whether the hair is visible in the image.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "headPose": {
                                                        "description": "Properties indicating head pose of the face.",
                                                        "properties": {
                                                            "pitch": {
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "roll": {
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "yaw": {
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "makeup": {
                                                        "description": "Properties describing present makeups on a given face.",
                                                        "properties": {
                                                            "eyeMakeup": {
                                                                "description": "A boolean value describing whether eye makeup is present on a face.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            },
                                                            "lipMakeup": {
                                                                "description": "A boolean value describing whether lip makeup is present on a face.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "noise": {
                                                        "description": "Properties describing noise level of the image.",
                                                        "properties": {
                                                            "noiseLevel": {
                                                                "description": "An enum value indicating level of noise.",
                                                                "enum": [
                                                                    "Low",
                                                                    "Medium",
                                                                    "High"
                                                                ],
                                                                "type": "string",
                                                                "x-ms-enum": {
                                                                    "modelAsString": false,
                                                                    "name": "NoiseLevel"
                                                                },
                                                                "nullable": false
                                                            },
                                                            "value": {
                                                                "description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "occlusion": {
                                                        "description": "Properties describing occlusions on a given face.",
                                                        "properties": {
                                                            "eyeOccluded": {
                                                                "description": "A boolean value indicating whether eyes are occluded.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            },
                                                            "foreheadOccluded": {
                                                                "description": "A boolean value indicating whether forehead is occluded.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            },
                                                            "mouthOccluded": {
                                                                "description": "A boolean value indicating whether the mouth is occluded.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "smile": {
                                                        "description": "Smile intensity, a number between [0,1] ",
                                                        "maximum": 1,
                                                        "minimum": 0,
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "faceId": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "faceLandmarks": {
                                                "description": "A collection of 27-point face landmarks pointing to the important positions of face components.",
                                                "properties": {
                                                    "eyeLeftBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeLeftInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeLeftOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeLeftTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowLeftInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowLeftOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowRightInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowRightOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "mouthLeft": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "mouthRight": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseLeftAlarOutTip": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseLeftAlarTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRightAlarOutTip": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRightAlarTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRootLeft": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRootRight": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseTip": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "pupilLeft": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "pupilRight": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "underLipBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "underLipTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "upperLipBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "upperLipTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "faceRectangle": {
                                                "description": "A rectangle within which a face can be found",
                                                "properties": {
                                                    "height": {
                                                        "description": "The height of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "left": {
                                                        "description": "The distance from the left edge if the image to the left edge of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "top": {
                                                        "description": "The distance from the top edge if the image to the top edge of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "width": {
                                                        "description": "The width of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "width",
                                                    "height",
                                                    "left",
                                                    "top"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "faceRectangle"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Detect with url example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "ImageUrl": "{Image Url here}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "returnFaceAttributes": [
                                "age",
                                "gender",
                                "headPose",
                                "smile",
                                "facialHair",
                                "glasses",
                                "emotion",
                                "hair",
                                "makeup",
                                "occlusion",
                                "accessories",
                                "blur",
                                "exposure",
                                "noise"
                            ]
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "faceAttributes": {
                                            "accessories": [
                                                {
                                                    "confidence": 0.99,
                                                    "type": "headWear"
                                                },
                                                {
                                                    "confidence": 1,
                                                    "type": "glasses"
                                                },
                                                {
                                                    "confidence": 0.87,
                                                    "type": "mask"
                                                }
                                            ],
                                            "age": 71,
                                            "blur": {
                                                "blurLevel": "Medium",
                                                "value": 0.51
                                            },
                                            "emotion": {
                                                "anger": 0.575,
                                                "contempt": 0,
                                                "disgust": 0.006,
                                                "fear": 0.008,
                                                "happiness": 0.394,
                                                "neutral": 0.013,
                                                "sadness": 0,
                                                "surprise": 0.004
                                            },
                                            "exposure": {
                                                "exposureLevel": "GoodExposure",
                                                "value": 0.55
                                            },
                                            "facialHair": {
                                                "beard": 0.1,
                                                "moustache": 0.8,
                                                "sideburns": 0.02
                                            },
                                            "gender": "male",
                                            "glasses": "sunglasses",
                                            "hair": {
                                                "bald": 0,
                                                "hairColor": [
                                                    {
                                                        "color": "brown",
                                                        "confidence": 1
                                                    },
                                                    {
                                                        "color": "blond",
                                                        "confidence": 0.88
                                                    },
                                                    {
                                                        "color": "black",
                                                        "confidence": 0.48
                                                    },
                                                    {
                                                        "color": "other",
                                                        "confidence": 0.11
                                                    },
                                                    {
                                                        "color": "gray",
                                                        "confidence": 0.07
                                                    },
                                                    {
                                                        "color": "red",
                                                        "confidence": 0.03
                                                    }
                                                ],
                                                "invisible": false
                                            },
                                            "headPose": {
                                                "pitch": 0,
                                                "roll": 2.1,
                                                "yaw": 3
                                            },
                                            "makeup": {
                                                "eyeMakeup": true,
                                                "lipMakeup": false
                                            },
                                            "noise": {
                                                "noiseLevel": "Low",
                                                "value": 0.12
                                            },
                                            "occlusion": {
                                                "eyeOccluded": false,
                                                "foreheadOccluded": false,
                                                "mouthOccluded": false
                                            },
                                            "smile": 0.88
                                        },
                                        "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
                                        "faceLandmarks": {
                                            "eyeLeftBottom": {
                                                "x": 413,
                                                "y": 80.1
                                            },
                                            "eyeLeftInner": {
                                                "x": 418.9,
                                                "y": 78
                                            },
                                            "eyeLeftOuter": {
                                                "x": 406.7,
                                                "y": 80.6
                                            },
                                            "eyeLeftTop": {
                                                "x": 412.2,
                                                "y": 76.2
                                            },
                                            "eyeRightBottom": {
                                                "x": 447,
                                                "y": 75.3
                                            },
                                            "eyeRightInner": {
                                                "x": 441.5,
                                                "y": 75
                                            },
                                            "eyeRightOuter": {
                                                "x": 451.7,
                                                "y": 73.4
                                            },
                                            "eyeRightTop": {
                                                "x": 446.4,
                                                "y": 71.7
                                            },
                                            "eyebrowLeftInner": {
                                                "x": 425.4,
                                                "y": 70.5
                                            },
                                            "eyebrowLeftOuter": {
                                                "x": 397.9,
                                                "y": 78.5
                                            },
                                            "eyebrowRightInner": {
                                                "x": 4.8,
                                                "y": 69.7
                                            },
                                            "eyebrowRightOuter": {
                                                "x": 5.5,
                                                "y": 68.5
                                            },
                                            "mouthLeft": {
                                                "x": 417.8,
                                                "y": 114.4
                                            },
                                            "mouthRight": {
                                                "x": 451.3,
                                                "y": 109.3
                                            },
                                            "noseLeftAlarOutTip": {
                                                "x": 424.3,
                                                "y": 96.4
                                            },
                                            "noseLeftAlarTop": {
                                                "x": 428.3,
                                                "y": 89.7
                                            },
                                            "noseRightAlarOutTip": {
                                                "x": 446.6,
                                                "y": 92.5
                                            },
                                            "noseRightAlarTop": {
                                                "x": 442.2,
                                                "y": 87
                                            },
                                            "noseRootLeft": {
                                                "x": 428,
                                                "y": 77.1
                                            },
                                            "noseRootRight": {
                                                "x": 435.8,
                                                "y": 75.6
                                            },
                                            "noseTip": {
                                                "x": 437.7,
                                                "y": 92.4
                                            },
                                            "pupilLeft": {
                                                "x": 412.7,
                                                "y": 78.4
                                            },
                                            "pupilRight": {
                                                "x": 446.8,
                                                "y": 74.2
                                            },
                                            "underLipBottom": {
                                                "x": 437.3,
                                                "y": 114.5
                                            },
                                            "underLipTop": {
                                                "x": 436.8,
                                                "y": 111.4
                                            },
                                            "upperLipBottom": {
                                                "x": 437.6,
                                                "y": 108.2
                                            },
                                            "upperLipTop": {
                                                "x": 437.6,
                                                "y": 105.9
                                            }
                                        },
                                        "faceRectangle": {
                                            "height": 78,
                                            "left": 394,
                                            "top": 54,
                                            "width": 78
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "Publicly reachable URL of an image",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "A JSON document with a URL pointing to the image that is to be analyzed.",
                    "required": true
                }
            }
        },
        "/facelists": {
            "get": {
                "description": "Retrieve information about all existing face lists. Only faceListId, name and userData will be returned.",
                "operationId": "FaceList_List",
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of faceList.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of face list results, with fields of faceListId, name and userData",
                                    "items": {
                                        "allOf": [
                                            {
                                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                                "properties": {
                                                    "name": {
                                                        "description": "User defined name, maximum length is 128.",
                                                        "maxLength": 128,
                                                        "type": "string"
                                                    },
                                                    "userData": {
                                                        "description": "User specified data. Length should not exceed 16KB.",
                                                        "maxLength": 16384,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ],
                                        "description": "Face list object.",
                                        "properties": {
                                            "faceListId": {
                                                "description": "FaceListId of the target face list.",
                                                "maxLength": 64,
                                                "pattern": "^[a-z0-9-_]+$",
                                                "type": "string"
                                            },
                                            "persistedFaces": {
                                                "description": "Persisted faces within the face list.",
                                                "items": {
                                                    "description": "PersonFace object.",
                                                    "properties": {
                                                        "persistedFaceId": {
                                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                                            "format": "uuid",
                                                            "type": "string"
                                                        },
                                                        "userData": {
                                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                                            "maxLength": 1024,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "persistedFaceId"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "faceListId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List Face lists example": {
                        "parameters": {
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}"
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "faceListId": "sample_face_list",
                                        "name": "list1",
                                        "userData": "User-provided data attached to the face list"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/facelists/{faceListId}": {
            "delete": {
                "description": "Delete an existing face list according to faceListId. Persisted face images in the face list will also be deleted.",
                "operationId": "FaceList_Delete",
                "parameters": [
                    {
                        "description": "Id referencing a particular face list.",
                        "in": "path",
                        "name": "faceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "faceListId": "sample_face_list"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve a face list's information.",
                "operationId": "FaceList_Get",
                "parameters": [
                    {
                        "description": "Id referencing a particular face list.",
                        "in": "path",
                        "name": "faceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the face list's information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Face list object.",
                                    "properties": {
                                        "faceListId": {
                                            "description": "FaceListId of the target face list.",
                                            "maxLength": 64,
                                            "pattern": "^[a-z0-9-_]+$",
                                            "type": "string"
                                        },
                                        "persistedFaces": {
                                            "description": "Persisted faces within the face list.",
                                            "items": {
                                                "description": "PersonFace object.",
                                                "properties": {
                                                    "persistedFaceId": {
                                                        "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "userData": {
                                                        "description": "User-provided data attached to the face. The size limit is 1KB.",
                                                        "maxLength": 1024,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "persistedFaceId"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "faceListId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "faceListId": "sample_face_list"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "faceListId": "sample_list",
                                    "name": "list1",
                                    "persistedFaces": [
                                        {
                                            "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBD",
                                            "userData": "User-provided data attached to the face"
                                        }
                                    ],
                                    "userData": "User-provided data attached to the face list"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update information of a face list.",
                "operationId": "FaceList_Update",
                "parameters": [
                    {
                        "description": "Id referencing a particular face list.",
                        "in": "path",
                        "name": "faceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "list1",
                                "userData": "User-provided data attached to the face list."
                            },
                            "faceListId": "sample_face_list"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating a face list.",
                    "required": true
                }
            },
            "put": {
                "description": "Create an empty face list. Up to 64 face lists are allowed to exist in one subscription.",
                "operationId": "FaceList_Create",
                "parameters": [
                    {
                        "description": "Id referencing a particular face list.",
                        "in": "path",
                        "name": "faceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create new face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "sample_list",
                                "userData": "User-provided data attached to the face list"
                            },
                            "faceListId": "sample_face_list"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for creating a face list.",
                    "required": true
                }
            }
        },
        "/facelists/{faceListId}/persistedfaces": {
            "post": {
                "description": "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.",
                "operationId": "FaceList_AddFaceFromUrl",
                "parameters": [
                    {
                        "description": "Id referencing a particular face list.",
                        "in": "path",
                        "name": "faceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns a new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create face list face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "ImageUrl": "{Image url}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "faceListId": "sample_face_list",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{Customized user data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "Publicly reachable URL of an image",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "A JSON document with a URL pointing to the image that is to be analyzed.",
                    "required": true
                }
            }
        },
        "/facelists/{faceListId}/persistedfaces/{persistedFaceId}": {
            "delete": {
                "description": "Delete an existing face from a face list (given by a persistedFaceId and a faceListId). Persisted image related to the face will also be deleted.",
                "operationId": "FaceList_DeleteFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular face list.",
                        "in": "path",
                        "name": "faceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete face in face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "faceListId": "sample_face_list",
                            "persistedFaceId": "62004fa7-1ac0-478e-9d5a-b38f9e7fbc68"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            }
        },
        "/findsimilars": {
            "post": {
                "description": "Given query face's faceId, find the similar-looking faces from a faceId array, a face list or a large face list.",
                "operationId": "Face_FindSimilar",
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of the most similar faces represented in faceId if the input parameter is faceIds or persistedFaceId if the input parameter is faceListId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Response body for find similar face operation.",
                                        "properties": {
                                            "confidence": {
                                                "description": "Similarity confidence of the candidate face. The higher confidence, the more similar. Range between [0,1].",
                                                "maximum": 1,
                                                "minimum": 0,
                                                "type": "number"
                                            },
                                            "faceId": {
                                                "description": "FaceId of candidate face when find by faceIds. faceId is created by Face - Detect and will expire 24 hours after the detection call",
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "persistedFaceId": {
                                                "description": "PersistedFaceId of candidate face when find by faceListId. persistedFaceId in face list is persisted and will not expire. As showed in below response",
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "confidence"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Find similar results example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
                                "largeFaceListId": "sample_list",
                                "maxNumOfCandidatesReturned": 1,
                                "mode": "matchPerson"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "confidence": 0.82,
                                        "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
                                    }
                                ]
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for find similar operation.",
                                "properties": {
                                    "faceId": {
                                        "description": "FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call",
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "faceIds": {
                                        "description": "An array of candidate faceIds. All of them are created by Face - Detect and the faceIds will expire 24 hours after the detection call. The number of faceIds is limited to 1000. Parameter faceListId, largeFaceListId and faceIds should not be provided at the same time.",
                                        "items": {
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    },
                                    "faceListId": {
                                        "description": "An existing user-specified unique candidate face list, created in Face List - Create a Face List. Face list contains a set of persistedFaceIds which are persisted and will never expire. Parameter faceListId, largeFaceListId and faceIds should not be provided at the same time.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    },
                                    "largeFaceListId": {
                                        "description": "An existing user-specified unique candidate large face list, created in LargeFaceList - Create. Large face list contains a set of persistedFaceIds which are persisted and will never expire. Parameter faceListId, largeFaceListId and faceIds should not be provided at the same time.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    },
                                    "maxNumOfCandidatesReturned": {
                                        "default": 20,
                                        "description": "The number of top similar faces returned. The valid range is [1, 1000].",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "default": "matchPerson",
                                        "description": "Similar face searching mode. It can be \"matchPerson\" or \"matchFace\".",
                                        "enum": [
                                            "matchPerson",
                                            "matchFace"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "FindSimilarMatchMode"
                                        },
                                        "nullable": false
                                    }
                                },
                                "required": [
                                    "faceId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for Find Similar.",
                    "required": true
                }
            }
        },
        "/group": {
            "post": {
                "description": "Divide candidate faces into groups based on face similarity.",
                "operationId": "Face_Group",
                "responses": {
                    "200": {
                        "description": "A successful call returns one or more groups of similar faces (rank by group size) and a messyGroup.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of face groups based on face similarity.",
                                    "properties": {
                                        "groups": {
                                            "description": "A partition of the original faces based on face similarity. Groups are ranked by number of faces",
                                            "items": {
                                                "items": {
                                                    "format": "uuid",
                                                    "type": "string",
                                                    "nullable": false
                                                },
                                                "type": "array"
                                            },
                                            "type": "array"
                                        },
                                        "messyGroup": {
                                            "description": "Face ids array of faces that cannot find any similar faces from original faces.",
                                            "items": {
                                                "format": "uuid",
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "groups"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "faceIds": [
                                    "c5c24a82-6845-4031-9d5d-978df9175426",
                                    "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                    "65d083d4-9447-47d1-af30-b626144bf0fb",
                                    "fce92aed-d578-4d2e-8114-068f8af4492e",
                                    "30ea1073-cc9e-4652-b1e3-d08fb7b95315",
                                    "be386ab3-af91-4104-9e6d-4dae4c9fddb7",
                                    "fbd2a038-dbff-452c-8e79-2ee81b1aa84e",
                                    "b64d5e15-8257-4af2-b20a-5a750f8940e7"
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "groups": [
                                        [
                                            "c5c24a82-6845-4031-9d5d-978df9175426",
                                            "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                            "fce92aed-d578-4d2e-8114-068f8af4492e",
                                            "b64d5e15-8257-4af2-b20a-5a750f8940e7"
                                        ],
                                        [
                                            "65d083d4-9447-47d1-af30-b626144bf0fb",
                                            "30ea1073-cc9e-4652-b1e3-d08fb7b95315"
                                        ]
                                    ],
                                    "messyGroup": [
                                        "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
                                    ]
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for group request.",
                                "properties": {
                                    "faceIds": {
                                        "description": "Array of candidate faceId created by Face - Detect. The maximum is 1000 faces",
                                        "items": {
                                            "format": "uuid",
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "faceIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for grouping.",
                    "required": true
                }
            }
        },
        "/identify": {
            "post": {
                "description": "1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.",
                "operationId": "Face_Identify",
                "responses": {
                    "200": {
                        "description": "A successful call returns the identified candidate person(s) for each query face.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Response body for identify face operation.",
                                        "properties": {
                                            "candidates": {
                                                "description": "Identified person candidates for that face (ranked by confidence). Array size should be no larger than input maxNumOfCandidatesReturned. If no person is identified, will return an empty array.",
                                                "items": {
                                                    "description": "All possible faces that may qualify.",
                                                    "properties": {
                                                        "confidence": {
                                                            "description": "Confidence threshold of identification, used to judge whether one face belong to one person. The range of confidenceThreshold is [0, 1] (default specified by algorithm).",
                                                            "maximum": 1,
                                                            "minimum": 0,
                                                            "type": "number"
                                                        },
                                                        "personId": {
                                                            "description": "Id of candidate",
                                                            "format": "uuid",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "personId",
                                                        "confidence"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "faceId": {
                                                "description": "FaceId of the query face",
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "faceId",
                                            "candidates"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Identify example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "confidenceThreshold": 0.5,
                                "faceIds": [
                                    "c5c24a82-6845-4031-9d5d-978df9175426",
                                    "65d083d4-9447-47d1-af30-b626144bf0fb"
                                ],
                                "largePersonGroupId": "sample_group",
                                "maxNumOfCandidatesReturned": 1
                            }
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "candidates": [
                                            {
                                                "confidence": 0.92,
                                                "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                                            }
                                        ],
                                        "faceId": "c5c24a82-6845-4031-9d5d-978df9175426"
                                    },
                                    {
                                        "candidates": [
                                            {
                                                "confidence": 0.89,
                                                "personId": "2ae4935b-9659-44c3-977f-61fac20d0538"
                                            }
                                        ],
                                        "faceId": "65d083d4-9447-47d1-af30-b626144bf0fb"
                                    }
                                ]
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for identify face operation.",
                                "properties": {
                                    "confidenceThreshold": {
                                        "description": "Confidence threshold of identification, used to judge whether one face belong to one person. The range of confidenceThreshold is [0, 1] (default specified by algorithm).",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "faceIds": {
                                        "description": "Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10].",
                                        "items": {
                                            "format": "uuid",
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "maxItems": 10,
                                        "type": "array"
                                    },
                                    "largePersonGroupId": {
                                        "description": "LargePersonGroupId of the target large person group, created by LargePersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    },
                                    "maxNumOfCandidatesReturned": {
                                        "default": 1,
                                        "description": "The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1).",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "personGroupId": {
                                        "description": "PersonGroupId of the target person group, created by PersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "faceIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for identify operation.",
                    "required": true
                }
            }
        },
        "/largefacelists": {
            "get": {
                "description": "Retrieve information about all existing large face lists. Only largeFaceListId, name and userData will be returned.",
                "operationId": "LargeFaceList_List",
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of largeFaceList.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of large face list results, with fields of largeFaceListId, name and userData",
                                    "items": {
                                        "allOf": [
                                            {
                                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                                "properties": {
                                                    "name": {
                                                        "description": "User defined name, maximum length is 128.",
                                                        "maxLength": 128,
                                                        "type": "string"
                                                    },
                                                    "userData": {
                                                        "description": "User specified data. Length should not exceed 16KB.",
                                                        "maxLength": 16384,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ],
                                        "description": "Large face list object.",
                                        "properties": {
                                            "largeFaceListId": {
                                                "description": "LargeFaceListId of the target large face list.",
                                                "maxLength": 64,
                                                "pattern": "^[a-z0-9-_]+$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "largeFaceListId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List large face lists example": {
                        "parameters": {
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}"
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "largeFaceListId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac",
                                        "name": "large-face-list-name1",
                                        "userData": "User-provided data attached to the large face list."
                                    },
                                    {
                                        "largeFaceListId": "c76f7f13-0ed3-4d00-8a3e-2ad3d78f6c37",
                                        "name": "large-face-list-name2",
                                        "userData": "User-provided data attached to the large face list."
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/largefacelists/{largeFaceListId}": {
            "delete": {
                "description": "Delete an existing large face list according to faceListId. Persisted face images in the large face list will also be deleted.",
                "operationId": "LargeFaceList_Delete",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete large face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "sample_face_list"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve a large face list's information.",
                "operationId": "LargeFaceList_Get",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the large face list's information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Large face list object.",
                                    "properties": {
                                        "largeFaceListId": {
                                            "description": "LargeFaceListId of the target large face list.",
                                            "maxLength": 64,
                                            "pattern": "^[a-z0-9-_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "largeFaceListId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get large face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "largeFaceListId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac",
                                    "name": "large-face-list-name",
                                    "userData": "User-provided data attached to the large face list."
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update information of a large face list.",
                "operationId": "LargeFaceList_Update",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update large face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "large-face-list-name",
                                "userData": "User-provided data attached to the large face list."
                            },
                            "largeFaceListId": "sample_face_list"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating a large face list.",
                    "required": true
                }
            },
            "put": {
                "description": "Create an empty large face list. Up to 64 large face lists are allowed to exist in one subscription.",
                "operationId": "LargeFaceList_Create",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create new large face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "large-face-list-name",
                                "userData": "User-provided data attached to the large face list."
                            },
                            "largeFaceListId": "sample_face_list"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for creating a large face list.",
                    "required": true
                }
            }
        },
        "/largefacelists/{largeFaceListId}/persistedfaces": {
            "get": {
                "description": "List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).",
                "operationId": "LargeFaceList_ListFaces",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Starting face id to return (used to list a range of faces).",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of faces to return starting with the face id indicated by the 'start' parameter.",
                        "in": "query",
                        "name": "top",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of face information that belong to the large face list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of persisted faces within the face list or large face list.",
                                    "items": {
                                        "description": "PersonFace object.",
                                        "properties": {
                                            "persistedFaceId": {
                                                "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "userData": {
                                                "description": "User-provided data attached to the face. The size limit is 1KB.",
                                                "maxLength": 1024,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "persistedFaceId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List faces in large face list": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "abc",
                            "start": "25985303-c537-4467-b41d-bdb45cd95ca1",
                            "top": 2
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "persistedFaceId": "8a887ac2-53fd-4f55-9024-1ec77eecd08e",
                                        "userData": "User-provided data attached to the large face list face."
                                    },
                                    {
                                        "persistedFaceId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac",
                                        "userData": "User-provided data attached to the large face list face."
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a face to a large face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.",
                "operationId": "LargeFaceList_AddFaceFromUrl",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns a new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create large face list face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "ImageUrl": "{Image url}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "sample_face_list",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{Customized user data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "Publicly reachable URL of an image",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "A JSON document with a URL pointing to the image that is to be analyzed.",
                    "required": true
                }
            }
        },
        "/largefacelists/{largeFaceListId}/persistedfaces/{persistedFaceId}": {
            "delete": {
                "description": "Delete an existing face from a large face list (given by a persistedFaceId and a largeFaceListId). Persisted image related to the face will also be deleted.",
                "operationId": "LargeFaceList_DeleteFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete face in large face list example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "sample_face_list",
                            "persistedFaceId": "62004fa7-1ac0-478e-9d5a-b38f9e7fbc68"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).",
                "operationId": "LargeFaceList_GetFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns target persisted face's information (persistedFaceId and userData).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get persisted face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "abc",
                            "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                    "userData": "User-provided data attached to the face."
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a persisted face's userData field.",
                "operationId": "LargeFaceList_UpdateFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "userData": "User-provided data attached to the face."
                            },
                            "largeFaceListId": "abc",
                            "persistedFaceId": "62004fa7-1ac0-478e-9d5a-b38f9e7fbc68"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to update face data.",
                                "properties": {
                                    "userData": {
                                        "description": "User-provided data attached to the face. The size limit is 1KB.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating persisted face.",
                    "required": true
                }
            }
        },
        "/largefacelists/{largeFaceListId}/train": {
            "post": {
                "description": "Queue a large face list training task, the training task may not be started immediately.",
                "operationId": "LargeFaceList_Train",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The training task was queued successfully."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Queue large face list training": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "abc"
                        },
                        "responses": {
                            "202": {
                                "body": ""
                            }
                        }
                    }
                }
            }
        },
        "/largefacelists/{largeFaceListId}/training": {
            "get": {
                "description": "Retrieve the training status of a large face list (completed or ongoing).",
                "operationId": "LargeFaceList_GetTrainingStatus",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the large face list's training status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Training status object.",
                                    "properties": {
                                        "createdDateTime": {
                                            "description": "A combined UTC date and time string that describes the created time of the person group, large person group or large face list.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "created"
                                        },
                                        "lastActionDateTime": {
                                            "description": "A combined UTC date and time string that describes the last modify time of the person group, large person group or large face list, could be null value when the group is not successfully trained.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "lastAction"
                                        },
                                        "lastSuccessfulTrainingDateTime": {
                                            "description": "A combined UTC date and time string that describes the last successful training time of the person group, large person group or large face list.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "lastSuccessfulTraining"
                                        },
                                        "message": {
                                            "description": "Show failure message when training failed (omitted when training succeed).",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Training status: notstarted, running, succeeded, failed. If the training process is waiting to perform, the status is notstarted. If the training is ongoing, the status is running. Status succeed means this person group or large person group is ready for Face - Identify, or this large face list is ready for Face - Find Similar. Status failed is often caused by no person or no persisted face exist in the person group or large person group, or no persisted face exist in the large face list.",
                                            "enum": [
                                                "nonstarted",
                                                "running",
                                                "succeeded",
                                                "failed"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "TrainingStatusType"
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "createdDateTime"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get large face list's training status example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "createdDateTime": "2017-12-21T12:57:27.00Z",
                                    "lastActionDateTime": "2017-12-21T12:57:30.00Z",
                                    "lastSuccessfulTrainingDateTime": "2017-12-21T12:57:30.00Z",
                                    "message": null,
                                    "status": "succeeded"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/largepersongroups": {
            "get": {
                "description": "List large person groups and their information.",
                "operationId": "LargePersonGroup_List",
                "parameters": [
                    {
                        "description": "List large person groups from the least largePersonGroupId greater than the \"start\".",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 64
                        }
                    },
                    {
                        "description": "The number of large person groups to list.",
                        "in": "query",
                        "name": "top",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000,
                            "default": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of large person groups and their information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of large person groups.",
                                    "items": {
                                        "allOf": [
                                            {
                                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                                "properties": {
                                                    "name": {
                                                        "description": "User defined name, maximum length is 128.",
                                                        "maxLength": 128,
                                                        "type": "string"
                                                    },
                                                    "userData": {
                                                        "description": "User specified data. Length should not exceed 16KB.",
                                                        "maxLength": 16384,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ],
                                        "description": "Large person group object.",
                                        "properties": {
                                            "largePersonGroupId": {
                                                "description": "LargePersonGroupId of the target large person groups",
                                                "maxLength": 64,
                                                "pattern": "^[a-z0-9-_]+$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "largePersonGroupId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List large person groups example": {
                        "parameters": {
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "start": "sample_group",
                            "top": 2
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "largePersonGroupId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac",
                                        "name": "large-person-group-name1",
                                        "userData": "User-provided data attached to the large person group"
                                    },
                                    {
                                        "largePersonGroupId": "c76f7f13-0ed3-4d00-8a3e-2ad3d78f6c37",
                                        "name": "large-person-group-name2",
                                        "userData": "User-provided data attached to the large person group"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}": {
            "delete": {
                "description": "Delete an existing large person group. Persisted face features of all people in the large person group will also be deleted.",
                "operationId": "LargePersonGroup_Delete",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete a large person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve the information of a large person group, including its name and userData.",
                "operationId": "LargePersonGroup_Get",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the large person group's information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Large person group object.",
                                    "properties": {
                                        "largePersonGroupId": {
                                            "description": "LargePersonGroupId of the target large person groups",
                                            "maxLength": 64,
                                            "pattern": "^[a-z0-9-_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "largePersonGroupId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get large person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "largePersonGroupId": "d408cb4e-2f5f-4b4d-b99e-f0b72870e5b5",
                                    "name": "large-person-group-name",
                                    "userData": "User-provided data attached to the large person group."
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing large person group's display name and userData. The properties which does not appear in request body will not be updated.",
                "operationId": "LargePersonGroup_Update",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update large person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "group1",
                                "userData": "user-provided data attached to the large person group"
                            },
                            "largePersonGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating large person group.",
                    "required": true
                }
            },
            "put": {
                "description": "Create a new large person group with specified largePersonGroupId, name and user-provided userData.",
                "operationId": "LargePersonGroup_Create",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create new large person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "large-person-group-name",
                                "userData": "User-provided data attached to the large person group."
                            },
                            "largePersonGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for creating new large person group.",
                    "required": true
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}/persons": {
            "get": {
                "description": "List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).",
                "operationId": "LargePersonGroupPerson_List",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Starting person id to return (used to list a range of persons).",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of persons to return starting with the person id indicated by the 'start' parameter.",
                        "in": "query",
                        "name": "top",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of person information that belong to the large person group.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of Persons.",
                                    "items": {
                                        "allOf": [
                                            {
                                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                                "properties": {
                                                    "name": {
                                                        "description": "User defined name, maximum length is 128.",
                                                        "maxLength": 128,
                                                        "type": "string"
                                                    },
                                                    "userData": {
                                                        "description": "User specified data. Length should not exceed 16KB.",
                                                        "maxLength": 16384,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ],
                                        "description": "Person object.",
                                        "properties": {
                                            "persistedFaceIds": {
                                                "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                                                "items": {
                                                    "format": "uuid",
                                                    "type": "string",
                                                    "nullable": false
                                                },
                                                "type": "array"
                                            },
                                            "personId": {
                                                "description": "PersonId of the target face list.",
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "personId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List persons in person group": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc",
                            "start": "25985303-c537-4467-b41d-bdb45cd95ca1",
                            "top": 2
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "name": "person-name1",
                                        "persistedFaceIds": [
                                            "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                            "fce92aed-d578-4d2e-8114-068f8af4492e",
                                            "b64d5e15-8257-4af2-b20a-5a750f8940e7"
                                        ],
                                        "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
                                        "userData": "User-provided data attached to the person"
                                    },
                                    {
                                        "name": "person-name2",
                                        "persistedFaceIds": [
                                            "30ea1073-cc9e-4652-b1e3-d08fb7b95315",
                                            "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
                                        ],
                                        "personId": "2ae4935b-9659-44c3-977f-61fac20d0538",
                                        "userData": "User-provided data attached to the person"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new person in a specified large person group.",
                "operationId": "LargePersonGroupPerson_Create",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns a new personId created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Person object.",
                                    "properties": {
                                        "persistedFaceIds": {
                                            "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                                            "items": {
                                                "format": "uuid",
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "type": "array"
                                        },
                                        "personId": {
                                            "description": "PersonId of the target face list.",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "personId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create new person for large person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "mike",
                                "userData": "{additional data associated with mike}"
                            },
                            "largePersonGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for creating new person.",
                    "required": true
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}/persons/{personId}": {
            "delete": {
                "description": "Delete an existing person from a large person group. All stored person data, and face features in the person entry will be deleted.",
                "operationId": "LargePersonGroupPerson_Delete",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete an existing person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve a person's information, including registered persisted faces, name and userData.",
                "operationId": "LargePersonGroupPerson_Get",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the person's information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Person object.",
                                    "properties": {
                                        "persistedFaceIds": {
                                            "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                                            "items": {
                                                "format": "uuid",
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "type": "array"
                                        },
                                        "personId": {
                                            "description": "PersonId of the target face list.",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "personId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "name": "person-name",
                                    "persistedFaceIds": [
                                        "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                        "fce92aed-d578-4d2e-8114-068f8af4492e",
                                        "b64d5e15-8257-4af2-b20a-5a750f8940e7"
                                    ],
                                    "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
                                    "userData": "User-provided data attached to the person"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update name or userData of a person.",
                "operationId": "LargePersonGroupPerson_Update",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "mike",
                                "userData": "{additional data associated with mike}"
                            },
                            "largePersonGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for person update operation.",
                    "required": true
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}/persons/{personId}/persistedfaces": {
            "post": {
                "description": "Add a representative face to a person for identification. The input face is specified as an image with a targetFace rectangle.",
                "operationId": "LargePersonGroupPerson_AddFaceFromUrl",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Add Person face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "ImageUrl": "{Image url}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc",
                            "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{customized User data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "Publicly reachable URL of an image",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "A JSON document with a URL pointing to the image that is to be analyzed.",
                    "required": true
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}/persons/{personId}/persistedfaces/{persistedFaceId}": {
            "delete": {
                "description": "Delete a face from a person. Relative feature for the persisted face will also be deleted.",
                "operationId": "LargePersonGroupPerson_DeleteFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete face from person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc",
                            "persistedFaceId": "62004fa7-1ac0-478e-9d5a-b38f9e7fbc68",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).",
                "operationId": "LargePersonGroupPerson_GetFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns target persisted face's information (persistedFaceId and userData).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get persisted face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc",
                            "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                            "personId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                    "userData": "User-provided data attached to the person face."
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a person persisted face's userData field.",
                "operationId": "LargePersonGroupPerson_UpdateFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update person face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "userData": "User-provided data attached to the face."
                            },
                            "largePersonGroupId": "abc",
                            "persistedFaceId": "62004fa7-1ac0-478e-9d5a-b38f9e7fbc68",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to update face data.",
                                "properties": {
                                    "userData": {
                                        "description": "User-provided data attached to the face. The size limit is 1KB.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating persisted face.",
                    "required": true
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}/train": {
            "post": {
                "description": "Queue a large person group training task, the training task may not be started immediately.",
                "operationId": "LargePersonGroup_Train",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The training task was queued successfully."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Queue large person group training": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc"
                        },
                        "responses": {
                            "202": {
                                "body": ""
                            }
                        }
                    }
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}/training": {
            "get": {
                "description": "Retrieve the training status of a large person group (completed or ongoing).",
                "operationId": "LargePersonGroup_GetTrainingStatus",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the large person group's training status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Training status object.",
                                    "properties": {
                                        "createdDateTime": {
                                            "description": "A combined UTC date and time string that describes the created time of the person group, large person group or large face list.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "created"
                                        },
                                        "lastActionDateTime": {
                                            "description": "A combined UTC date and time string that describes the last modify time of the person group, large person group or large face list, could be null value when the group is not successfully trained.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "lastAction"
                                        },
                                        "lastSuccessfulTrainingDateTime": {
                                            "description": "A combined UTC date and time string that describes the last successful training time of the person group, large person group or large face list.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "lastSuccessfulTraining"
                                        },
                                        "message": {
                                            "description": "Show failure message when training failed (omitted when training succeed).",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Training status: notstarted, running, succeeded, failed. If the training process is waiting to perform, the status is notstarted. If the training is ongoing, the status is running. Status succeed means this person group or large person group is ready for Face - Identify, or this large face list is ready for Face - Find Similar. Status failed is often caused by no person or no persisted face exist in the person group or large person group, or no persisted face exist in the large face list.",
                                            "enum": [
                                                "nonstarted",
                                                "running",
                                                "succeeded",
                                                "failed"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "TrainingStatusType"
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "createdDateTime"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get large person group's training status example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "createdDateTime": "2017-12-21T12:57:27.00Z",
                                    "lastActionDateTime": "2017-12-21T12:57:30.00Z",
                                    "lastSuccessfulTrainingDateTime": "2017-12-21T12:57:30.00Z",
                                    "message": null,
                                    "status": "succeeded"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operations/{operationId}": {
            "get": {
                "description": "Retrieve the status of a take/apply snapshot operation.",
                "operationId": "Snapshot_GetOperationStatus",
                "parameters": [
                    {
                        "description": "Id referencing a particular take/apply snapshot operation.",
                        "in": "path",
                        "name": "operationId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the snapshot operation's status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Operation status object. Operation refers to the asynchronous backend task including taking a snapshot and applying a snapshot.",
                                    "properties": {
                                        "createdTime": {
                                            "description": "A combined UTC date and time string that describes the time when the operation (take or apply a snapshot) is requested. E.g. 2018-12-25T11:41:02.2331413Z.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "lastActionTime": {
                                            "description": "A combined UTC date and time string that describes the last time the operation (take or apply a snapshot) is actively migrating data. The lastActionTime will keep increasing until the operation finishes. E.g. 2018-12-25T11:51:27.8705696Z.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "Show failure message when operation fails (omitted when operation succeeds).",
                                            "type": "string"
                                        },
                                        "resourceLocation": {
                                            "description": "When the operation succeeds successfully, for snapshot taking operation the snapshot id will be included in this field, and for snapshot applying operation, the path to get the target object will be returned in this field.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Operation status: notstarted, running, succeeded, failed. If the operation is requested and waiting to perform, the status is notstarted. If the operation is ongoing in backend, the status is running. Status succeeded means the operation is completed successfully, specifically for snapshot taking operation, it illustrates the snapshot is well taken and ready to apply, and for snapshot applying operation, it presents the target object has finished creating by the snapshot and ready to be used. Status failed is often caused by editing the source object while taking the snapshot or editing the target object while applying the snapshot before completion, see the field \"message\" to check the failure reason.",
                                            "enum": [
                                                "notstarted",
                                                "running",
                                                "succeeded",
                                                "failed"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "OperationStatusType"
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "createdTime"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get snapshot operation status example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "operationId": "a63a3bdd-a1db-4d05-87b8-dbad6850062a"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "createdTime": "2018-12-25T11:41:02.2331413Z",
                                    "lastActionTime": "2018-12-25T11:51:27.8705696Z",
                                    "message": null,
                                    "resourceLocation": "/snapshots/e58b3f08-1e8b-4165-81df-aa9858f233dc",
                                    "status": "succeeded"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persongroups": {
            "get": {
                "description": "List person groups and their information.",
                "operationId": "PersonGroup_List",
                "parameters": [
                    {
                        "description": "List person groups from the least personGroupId greater than the \"start\".",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 64
                        }
                    },
                    {
                        "description": "The number of person groups to list.",
                        "in": "query",
                        "name": "top",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000,
                            "default": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of person groups and their information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of person groups.",
                                    "items": {
                                        "allOf": [
                                            {
                                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                                "properties": {
                                                    "name": {
                                                        "description": "User defined name, maximum length is 128.",
                                                        "maxLength": 128,
                                                        "type": "string"
                                                    },
                                                    "userData": {
                                                        "description": "User specified data. Length should not exceed 16KB.",
                                                        "maxLength": 16384,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ],
                                        "description": "Person group object.",
                                        "properties": {
                                            "personGroupId": {
                                                "description": "PersonGroupId of the target person group.",
                                                "maxLength": 64,
                                                "pattern": "^[a-z0-9-_]+$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "personGroupId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List person groups example": {
                        "parameters": {
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "start": "sample_group",
                            "top": 2
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "name": "group1",
                                        "personGroupId": "sample_group",
                                        "userData": "User-provided data attached to the person group"
                                    },
                                    {
                                        "name": "group2",
                                        "personGroupId": "sample_group2",
                                        "userData": "User-provided data attached to the person group"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/persongroups/{personGroupId}": {
            "delete": {
                "description": "Delete an existing person group. Persisted face features of all people in the person group will also be deleted.",
                "operationId": "PersonGroup_Delete",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete a person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve the information of a person group, including its name and userData.",
                "operationId": "PersonGroup_Get",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the person group's information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Person group object.",
                                    "properties": {
                                        "personGroupId": {
                                            "description": "PersonGroupId of the target person group.",
                                            "maxLength": 64,
                                            "pattern": "^[a-z0-9-_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "personGroupId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "name": "group1",
                                    "personGroupId": "sample_group",
                                    "userData": "User-provided data attached to the person group"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing person group's display name and userData. The properties which does not appear in request body will not be updated.",
                "operationId": "PersonGroup_Update",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "group1",
                                "userData": "user-provided data attached to the person group"
                            },
                            "personGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating person group.",
                    "required": true
                }
            },
            "put": {
                "description": "Create a new person group with specified personGroupId, name and user-provided userData.",
                "operationId": "PersonGroup_Create",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create new person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "group1",
                                "userData": "user-provided data attached to the person group"
                            },
                            "personGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for creating new person group.",
                    "required": true
                }
            }
        },
        "/persongroups/{personGroupId}/persons": {
            "get": {
                "description": "List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).",
                "operationId": "PersonGroupPerson_List",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Starting person id to return (used to list a range of persons).",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of persons to return starting with the person id indicated by the 'start' parameter.",
                        "in": "query",
                        "name": "top",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of person information that belong to the person group.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of Persons.",
                                    "items": {
                                        "allOf": [
                                            {
                                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                                "properties": {
                                                    "name": {
                                                        "description": "User defined name, maximum length is 128.",
                                                        "maxLength": 128,
                                                        "type": "string"
                                                    },
                                                    "userData": {
                                                        "description": "User specified data. Length should not exceed 16KB.",
                                                        "maxLength": 16384,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ],
                                        "description": "Person object.",
                                        "properties": {
                                            "persistedFaceIds": {
                                                "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                                                "items": {
                                                    "format": "uuid",
                                                    "type": "string",
                                                    "nullable": false
                                                },
                                                "type": "array"
                                            },
                                            "personId": {
                                                "description": "PersonId of the target face list.",
                                                "format": "uuid",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "personId"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List persons in person group": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc",
                            "start": "25985303-c537-4467-b41d-bdb45cd95ca1",
                            "top": 2
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "name": "Ryan",
                                        "persistedFaceIds": [
                                            "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                            "fce92aed-d578-4d2e-8114-068f8af4492e",
                                            "b64d5e15-8257-4af2-b20a-5a750f8940e7"
                                        ],
                                        "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
                                        "userData": "User-provided data attached to the person"
                                    },
                                    {
                                        "name": "David",
                                        "persistedFaceIds": [
                                            "30ea1073-cc9e-4652-b1e3-d08fb7b95315",
                                            "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
                                        ],
                                        "personId": "2ae4935b-9659-44c3-977f-61fac20d0538",
                                        "userData": "User-provided data attached to the person"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new person in a specified person group.",
                "operationId": "PersonGroupPerson_Create",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns a new personId created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Person object.",
                                    "properties": {
                                        "persistedFaceIds": {
                                            "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                                            "items": {
                                                "format": "uuid",
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "type": "array"
                                        },
                                        "personId": {
                                            "description": "PersonId of the target face list.",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "personId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Create new person for person group example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "mike",
                                "userData": "{additional data associated with mike}"
                            },
                            "personGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for creating new person.",
                    "required": true
                }
            }
        },
        "/persongroups/{personGroupId}/persons/{personId}": {
            "delete": {
                "description": "Delete an existing person from a person group. All stored person data, and face features in the person entry will be deleted.",
                "operationId": "PersonGroupPerson_Delete",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete an existing person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve a person's information, including registered persisted faces, name and userData.",
                "operationId": "PersonGroupPerson_Get",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the person's information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                            "properties": {
                                                "name": {
                                                    "description": "User defined name, maximum length is 128.",
                                                    "maxLength": 128,
                                                    "type": "string"
                                                },
                                                "userData": {
                                                    "description": "User specified data. Length should not exceed 16KB.",
                                                    "maxLength": 16384,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Person object.",
                                    "properties": {
                                        "persistedFaceIds": {
                                            "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                                            "items": {
                                                "format": "uuid",
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "type": "array"
                                        },
                                        "personId": {
                                            "description": "PersonId of the target face list.",
                                            "format": "uuid",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "personId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "name": "Ryan",
                                    "persistedFaceIds": [
                                        "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                        "fce92aed-d578-4d2e-8114-068f8af4492e",
                                        "b64d5e15-8257-4af2-b20a-5a750f8940e7"
                                    ],
                                    "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
                                    "userData": "User-provided data attached to the person"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update name or userData of a person.",
                "operationId": "PersonGroupPerson_Update",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "name": "mike",
                                "userData": "{additional data associated with mike}"
                            },
                            "personGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                                "properties": {
                                    "name": {
                                        "description": "User defined name, maximum length is 128.",
                                        "maxLength": 128,
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User specified data. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for person update operation.",
                    "required": true
                }
            }
        },
        "/persongroups/{personGroupId}/persons/{personId}/persistedfaces": {
            "post": {
                "description": "Add a representative face to a person for identification. The input face is specified as an image with a targetFace rectangle.",
                "operationId": "PersonGroupPerson_AddFaceFromUrl",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Add Person face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "ImageUrl": "{Image url}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc",
                            "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{customized User data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "Publicly reachable URL of an image",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "A JSON document with a URL pointing to the image that is to be analyzed.",
                    "required": true
                }
            }
        },
        "/persongroups/{personGroupId}/persons/{personId}/persistedfaces/{persistedFaceId}": {
            "delete": {
                "description": "Delete a face from a person. Relative feature for the persisted face will also be deleted.",
                "operationId": "PersonGroupPerson_DeleteFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete face from person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "persistedFaceId": "62004fa7-1ac0-478e-9d5a-b38f9e7fbc68",
                            "personGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).",
                "operationId": "PersonGroupPerson_GetFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns target persisted face's information (persistedFaceId and userData).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get persisted face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "persistedFaceId": "asd",
                            "personGroupId": "abc",
                            "personId": "foobar"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
                                    "userData": "User-provided data attached to the person face."
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a person persisted face's userData field.",
                "operationId": "PersonGroupPerson_UpdateFace",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "Id referencing a particular persistedFaceId of an existing face.",
                        "in": "path",
                        "name": "persistedFaceId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update person face example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "userData": "User-provided data attached to the face"
                            },
                            "persistedFaceId": "62004fa7-1ac0-478e-9d5a-b38f9e7fbc68",
                            "personGroupId": "abc",
                            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to update face data.",
                                "properties": {
                                    "userData": {
                                        "description": "User-provided data attached to the face. The size limit is 1KB.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating persisted face.",
                    "required": true
                }
            }
        },
        "/persongroups/{personGroupId}/train": {
            "post": {
                "description": "Queue a person group training task, the training task may not be started immediately.",
                "operationId": "PersonGroup_Train",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The training task was queued successfully."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Queue person group training": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc"
                        },
                        "responses": {
                            "202": {
                                "body": ""
                            }
                        }
                    }
                }
            }
        },
        "/persongroups/{personGroupId}/training": {
            "get": {
                "description": "Retrieve the training status of a person group (completed or ongoing).",
                "operationId": "PersonGroup_GetTrainingStatus",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the person group's training status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Training status object.",
                                    "properties": {
                                        "createdDateTime": {
                                            "description": "A combined UTC date and time string that describes the created time of the person group, large person group or large face list.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "created"
                                        },
                                        "lastActionDateTime": {
                                            "description": "A combined UTC date and time string that describes the last modify time of the person group, large person group or large face list, could be null value when the group is not successfully trained.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "lastAction"
                                        },
                                        "lastSuccessfulTrainingDateTime": {
                                            "description": "A combined UTC date and time string that describes the last successful training time of the person group, large person group or large face list.",
                                            "format": "date-time",
                                            "type": "string",
                                            "x-ms-client-name": "lastSuccessfulTraining"
                                        },
                                        "message": {
                                            "description": "Show failure message when training failed (omitted when training succeed).",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Training status: notstarted, running, succeeded, failed. If the training process is waiting to perform, the status is notstarted. If the training is ongoing, the status is running. Status succeed means this person group or large person group is ready for Face - Identify, or this large face list is ready for Face - Find Similar. Status failed is often caused by no person or no persisted face exist in the person group or large person group, or no persisted face exist in the large face list.",
                                            "enum": [
                                                "nonstarted",
                                                "running",
                                                "succeeded",
                                                "failed"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "TrainingStatusType"
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "createdDateTime"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get person group's training status example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "createdDateTime": "2017-12-21T12:57:27.00Z",
                                    "lastActionDateTime": "2017-12-21T12:57:30.00Z",
                                    "message": null,
                                    "status": "succeeded"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/snapshots": {
            "get": {
                "description": "List all accessible snapshots with related information, including snapshots that were taken by the user, or snapshots to be applied to the user (subscription id was included in the applyScope in Snapshot - Take).",
                "operationId": "Snapshot_List",
                "parameters": [
                    {
                        "description": "User specified object type as a search filter.",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "SnapshotObjectType"
                        },
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FaceList",
                                "LargeFaceList",
                                "LargePersonGroup",
                                "PersonGroup"
                            ]
                        }
                    },
                    {
                        "description": "User specified snapshot apply scopes as a search filter. ApplyScope is an array of the target Azure subscription ids for the snapshot, specified by the user who created the snapshot by Snapshot - Take.",
                        "in": "query",
                        "name": "applyScope",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of snapshots with snapshot information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An array of snapshots.",
                                    "items": {
                                        "description": "Snapshot object.",
                                        "properties": {
                                            "account": {
                                                "description": "Azure Cognitive Service Face account id of the subscriber who created the snapshot by Snapshot - Take.",
                                                "type": "string"
                                            },
                                            "applyScope": {
                                                "description": "Array of the target Face subscription ids for the snapshot, specified by the user who created the snapshot when calling Snapshot - Take. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                                                "items": {
                                                    "format": "uuid",
                                                    "type": "string",
                                                    "nullable": false
                                                },
                                                "type": "array"
                                            },
                                            "createdTime": {
                                                "description": "A combined UTC date and time string that describes the created time of the snapshot. E.g. 2018-12-25T11:41:02.2331413Z.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "id": {
                                                "description": "Snapshot id.",
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "lastUpdateTime": {
                                                "description": "A combined UTC date and time string that describes the last time when the snapshot was created or updated by Snapshot - Update. E.g. 2018-12-25T11:51:27.8705696Z.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "Type of the source object in the snapshot, specified by the subscriber who created the snapshot when calling Snapshot - Take. Currently FaceList, PersonGroup, LargeFaceList and LargePersonGroup are supported.",
                                                "enum": [
                                                    "FaceList",
                                                    "LargeFaceList",
                                                    "LargePersonGroup",
                                                    "PersonGroup"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "SnapshotObjectType"
                                                }
                                            },
                                            "userData": {
                                                "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                                                "maxLength": 16384,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "account",
                                            "type",
                                            "applyScope",
                                            "createdTime",
                                            "lastUpdateTime"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "List snapshots example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "applyScope": [
                                "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
                            ],
                            "type": "FaceList"
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "account": "/subscriptions/f9b96b36-1f5e-4021-8959-51527e26e6d3/resourceGroups/TestRG/providers/Microsoft.CognitiveServices/accounts/FaceTest01",
                                        "applyScope": [
                                            "35230F59-AA9C-45E0-AB5E-C859BF1A5429",
                                            "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
                                        ],
                                        "createdTime": "2018-12-25T11:41:02.2331413Z",
                                        "id": "e58b3f08-1e8b-4165-81df-aa9858f233dc",
                                        "lastUpdateTime": "2018-12-25T11:51:27.8705696Z",
                                        "type": "FaceList",
                                        "userData": "User-provided data attached to the snapshot1."
                                    },
                                    {
                                        "account": "/subscriptions/6622996e-0149-4b22-9703-4216dc948d52/resourceGroups/TestRG/providers/Microsoft.CognitiveServices/accounts/FaceTest01",
                                        "applyScope": [
                                            "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
                                        ],
                                        "createdTime": "2018-12-29T17:09:32.3298483Z",
                                        "id": "a61e61e4-c3d1-4d33-8ae8-676e6104757d",
                                        "lastUpdateTime": "2018-12-29T17:14:34.5645877Z",
                                        "type": "FaceList",
                                        "userData": "User-provided data attached to the snapshot2."
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Submit an operation to take a snapshot of face list, large face list, person group or large person group, with user-specified snapshot type, source object id, apply scope and an optional user data.<br />\nThe snapshot interfaces are for users to backup and restore their face data from one face subscription to another, inside same region or across regions. The workflow contains two phases, user first calls Snapshot - Take to create a copy of the source object and store it as a snapshot, then calls Snapshot - Apply to paste the snapshot to target subscription. The snapshots are stored in a centralized location (per Azure instance), so that they can be applied cross accounts and regions.<br />\nTaking snapshot is an asynchronous operation. An operation id can be obtained from the \"Operation-Location\" field in response header, to be used in OperationStatus - Get for tracking the progress of creating the snapshot. The snapshot id will be included in the \"resourceLocation\" field in OperationStatus - Get response when the operation status is \"succeeded\".<br />\nSnapshot taking time depends on the number of person and face entries in the source object. It could be in seconds, or up to several hours for 1,000,000 persons with multiple faces.<br />\nSnapshots will be automatically expired and cleaned in 48 hours after it is created by Snapshot - Take. User can delete the snapshot using Snapshot - Delete by themselves any time before expiration.<br />\nTaking snapshot for a certain object will not block any other operations against the object. All read-only operations (Get/List and Identify/FindSimilar/Verify) can be conducted as usual. For all writable operations, including Add/Update/Delete the source object or its persons/faces and Train, they are not blocked but not recommended because writable updates may not be reflected on the snapshot during its taking. After snapshot taking is completed, all readable and writable operations can work as normal. Snapshot will also include the training results of the source object, which means target subscription the snapshot applied to does not need re-train the target object before calling Identify/FindSimilar.<br />\n* Free-tier subscription quota: 100 take operations per month.\n* S0-tier subscription quota: 100 take operations per day.",
                "operationId": "Snapshot_Take",
                "responses": {
                    "202": {
                        "description": "The snapshot taking task was queued successfully.",
                        "headers": {
                            "Operation-Location": {
                                "description": "Operation location with an operation id used to track the progress of taking snapshot. The returned id is the operation id, rather than snapshot id. Snapshot id can be obtained only when the operation status becomes \"succeeded\" in OperationStatus - Get.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Take a snapshot example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "applyScope": [
                                    "35230F59-AA9C-45E0-AB5E-C859BF1A5429",
                                    "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
                                ],
                                "objectId": "source-face-list-id",
                                "type": "FaceList",
                                "userData": "User-provided data attached to the snapshot."
                            }
                        },
                        "responses": {
                            "202": {
                                "body": "",
                                "header": {
                                    "Operation-Location": "/operations/a63a3bdd-a1db-4d05-87b8-dbad6850062a"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for taking snapshot operation.",
                                "properties": {
                                    "applyScope": {
                                        "description": "User specified array of target Face subscription ids for the snapshot. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                                        "items": {
                                            "format": "uuid",
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "type": "array"
                                    },
                                    "objectId": {
                                        "description": "User specified source object id to take snapshot from.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "User specified type for the source object to take snapshot from. Currently FaceList, PersonGroup, LargeFaceList and LargePersonGroup are supported.",
                                        "enum": [
                                            "FaceList",
                                            "LargeFaceList",
                                            "LargePersonGroup",
                                            "PersonGroup"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "SnapshotObjectType"
                                        }
                                    },
                                    "userData": {
                                        "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type",
                                    "objectId",
                                    "applyScope"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for taking a snapshot.",
                    "required": true
                }
            }
        },
        "/snapshots/{snapshotId}": {
            "delete": {
                "description": "Delete an existing snapshot according to the snapshotId. All object data and information in the snapshot will also be deleted. Only the source subscription who took the snapshot can delete the snapshot. If the user does not delete a snapshot with this API, the snapshot will still be automatically deleted in 48 hours after creation.",
                "operationId": "Snapshot_Delete",
                "parameters": [
                    {
                        "description": "Id referencing a particular snapshot.",
                        "in": "path",
                        "name": "snapshotId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete snapshot example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "snapshotId": "e58b3f08-1e8b-4165-81df-aa9858f233dc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieve information about a snapshot. Snapshot is only accessible to the source subscription who took it, and target subscriptions included in the applyScope in Snapshot - Take.",
                "operationId": "Snapshot_Get",
                "parameters": [
                    {
                        "description": "Id referencing a particular snapshot.",
                        "in": "path",
                        "name": "snapshotId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the snapshot's information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Snapshot object.",
                                    "properties": {
                                        "account": {
                                            "description": "Azure Cognitive Service Face account id of the subscriber who created the snapshot by Snapshot - Take.",
                                            "type": "string"
                                        },
                                        "applyScope": {
                                            "description": "Array of the target Face subscription ids for the snapshot, specified by the user who created the snapshot when calling Snapshot - Take. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                                            "items": {
                                                "format": "uuid",
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "type": "array"
                                        },
                                        "createdTime": {
                                            "description": "A combined UTC date and time string that describes the created time of the snapshot. E.g. 2018-12-25T11:41:02.2331413Z.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "Snapshot id.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "lastUpdateTime": {
                                            "description": "A combined UTC date and time string that describes the last time when the snapshot was created or updated by Snapshot - Update. E.g. 2018-12-25T11:51:27.8705696Z.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "Type of the source object in the snapshot, specified by the subscriber who created the snapshot when calling Snapshot - Take. Currently FaceList, PersonGroup, LargeFaceList and LargePersonGroup are supported.",
                                            "enum": [
                                                "FaceList",
                                                "LargeFaceList",
                                                "LargePersonGroup",
                                                "PersonGroup"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "SnapshotObjectType"
                                            }
                                        },
                                        "userData": {
                                            "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                                            "maxLength": 16384,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "account",
                                        "type",
                                        "applyScope",
                                        "createdTime",
                                        "lastUpdateTime"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Get snapshot example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "snapshotId": "e58b3f08-1e8b-4165-81df-aa9858f233dc"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "account": "/subscriptions/f9b96b36-1f5e-4021-8959-51527e26e6d3/resourceGroups/TestRG/providers/Microsoft.CognitiveServices/accounts/FaceTest01",
                                    "applyScope": [
                                        "35230F59-AA9C-45E0-AB5E-C859BF1A5429",
                                        "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
                                    ],
                                    "createdTime": "2018-12-25T11:41:02.2331413Z",
                                    "id": "e58b3f08-1e8b-4165-81df-aa9858f233dc",
                                    "lastUpdateTime": "2018-12-25T11:51:27.8705696Z",
                                    "type": "FaceList",
                                    "userData": "User-provided data attached to the snapshot."
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the information of a snapshot. Only the source subscription who took the snapshot can update the snapshot.",
                "operationId": "Snapshot_Update",
                "parameters": [
                    {
                        "description": "Id referencing a particular snapshot.",
                        "in": "path",
                        "name": "snapshotId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an empty response body."
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Update snapshot example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "applyScope": [
                                    "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
                                ],
                                "userData": "User-provided data attached to the snapshot."
                            },
                            "snapshotId": "e58b3f08-1e8b-4165-81df-aa9858f233dc"
                        },
                        "responses": {
                            "200": {
                                "body": ""
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for updating a snapshot, with a combination of user defined apply scope and user specified data.",
                                "properties": {
                                    "applyScope": {
                                        "description": "Array of the target Face subscription ids for the snapshot, specified by the user who created the snapshot when calling Snapshot - Take. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                                        "items": {
                                            "format": "uuid",
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "type": "array"
                                    },
                                    "userData": {
                                        "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                                        "maxLength": 16384,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for updating a snapshot.",
                    "required": true
                }
            }
        },
        "/snapshots/{snapshotId}/apply": {
            "post": {
                "description": "Submit an operation to apply a snapshot to current subscription. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.<br />\nThe snapshot interfaces are for users to backup and restore their face data from one face subscription to another, inside same region or across regions. The workflow contains two phases, user first calls Snapshot - Take to create a copy of the source object and store it as a snapshot, then calls Snapshot - Apply to paste the snapshot to target subscription. The snapshots are stored in a centralized location (per Azure instance), so that they can be applied cross accounts and regions.<br />\nApplying snapshot is an asynchronous operation. An operation id can be obtained from the \"Operation-Location\" field in response header, to be used in OperationStatus - Get for tracking the progress of applying the snapshot. The target object id will be included in the \"resourceLocation\" field in OperationStatus - Get response when the operation status is \"succeeded\".<br />\nSnapshot applying time depends on the number of person and face entries in the snapshot object. It could be in seconds, or up to 1 hour for 1,000,000 persons with multiple faces.<br />\nSnapshots will be automatically expired and cleaned in 48 hours after it is created by Snapshot - Take. So the target subscription is required to apply the snapshot in 48 hours since its creation.<br />\nApplying a snapshot will not block any other operations against the target object, however it is not recommended because the correctness cannot be guaranteed during snapshot applying. After snapshot applying is completed, all operations towards the target object can work as normal. Snapshot also includes the training results of the source object, which means target subscription the snapshot applied to does not need re-train the target object before calling Identify/FindSimilar.<br />\nOne snapshot can be applied multiple times in parallel, while currently only CreateNew apply mode is supported, which means the apply operation will fail if target subscription already contains an object of same type and using the same objectId. Users can specify the \"objectId\" in request body to avoid such conflicts.<br />\n* Free-tier subscription quota: 100 apply operations per month.\n* S0-tier subscription quota: 100 apply operations per day.",
                "operationId": "Snapshot_Apply",
                "parameters": [
                    {
                        "description": "Id referencing a particular snapshot.",
                        "in": "path",
                        "name": "snapshotId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The snapshot applying task was queued successfully.",
                        "headers": {
                            "Operation-Location": {
                                "description": "Operation location with an operation id used to track the progress of applying the snapshot by OperationStatus - Get.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Apply snapshot example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "mode": "CreateNew",
                                "objectId": "target-face-list-id"
                            },
                            "snapshotId": "e58b3f08-1e8b-4165-81df-aa9858f233dc"
                        },
                        "responses": {
                            "202": {
                                "body": "",
                                "header": {
                                    "Operation-Location": "/operations/84276574-2a2a-4540-a1b0-f65d834d225b"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for applying snapshot operation.",
                                "properties": {
                                    "mode": {
                                        "default": "CreateNew",
                                        "description": "Snapshot applying mode. Currently only CreateNew is supported, which means the apply operation will fail if target subscription already contains an object of same type and using the same objectId. Users can specify the \"objectId\" in request body to avoid such conflicts.",
                                        "enum": [
                                            "CreateNew"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "SnapshotApplyMode"
                                        },
                                        "nullable": false
                                    },
                                    "objectId": {
                                        "description": "User specified target object id to be created from the snapshot.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "objectId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for applying a snapshot.",
                    "required": true
                }
            }
        },
        "/verify": {
            "post": {
                "description": "Verify whether two faces belong to a same person or whether one face belongs to a person.",
                "operationId": "Face_VerifyFaceToFace",
                "responses": {
                    "200": {
                        "description": "A successful call returns the verification result.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Result of the verify operation.",
                                    "properties": {
                                        "confidence": {
                                            "description": "A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override \"isIdentical\" and fine-tune the result on their own data.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number"
                                        },
                                        "isIdentical": {
                                            "description": "True if the two faces belong to the same person or the face belongs to the person, otherwise false.",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "isIdentical",
                                        "confidence"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Verify faces example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "faceId1": "c5c24a82-6845-4031-9d5d-978df9175426",
                                "faceId2": "815df99c-598f-4926-930a-a734b3fd651c"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "confidence": 0.9,
                                    "isIdentical": true
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for face to face verification.",
                                "properties": {
                                    "faceId1": {
                                        "description": "FaceId of the first face, comes from Face - Detect",
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "faceId2": {
                                        "description": "FaceId of the second face, comes from Face - Detect",
                                        "format": "uuid",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "faceId1",
                                    "faceId2"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for face to face verification.",
                    "required": true
                }
            }
        }
    },
    "x-ms-paths": {
        "/detect?overload=stream": {
            "post": {
                "description": "Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.",
                "operationId": "Face_DetectWithStream",
                "parameters": [
                    {
                        "description": "A value indicating whether the operation should return faceIds of detected faces.",
                        "in": "query",
                        "name": "returnFaceId",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "description": "A value indicating whether the operation should return landmarks of the detected faces.",
                        "in": "query",
                        "name": "returnFaceLandmarks",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "description": "Analyze and return the one or more specified face attributes in the comma-separated string like \"returnFaceAttributes=age,gender\". Supported face attributes include age, gender, headPose, smile, facialHair, glasses and emotion. Note that each face attribute analysis has additional computational and time cost.",
                        "in": "query",
                        "name": "returnFaceAttributes",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "age",
                                    "gender",
                                    "headPose",
                                    "smile",
                                    "facialHair",
                                    "glasses",
                                    "emotion",
                                    "hair",
                                    "makeup",
                                    "occlusion",
                                    "accessories",
                                    "blur",
                                    "exposure",
                                    "noise"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "FaceAttributeType"
                                },
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns an array of face entries ranked by face rectangle size in descending order. An empty response indicates no faces detected.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Detected Face object.",
                                        "properties": {
                                            "faceAttributes": {
                                                "description": "Face Attributes",
                                                "properties": {
                                                    "accessories": {
                                                        "description": "Properties describing any accessories on a given face.",
                                                        "items": {
                                                            "description": "Accessory item and corresponding confidence level.",
                                                            "properties": {
                                                                "confidence": {
                                                                    "description": "Confidence level of an accessory",
                                                                    "maximum": 1,
                                                                    "minimum": 0,
                                                                    "type": "number",
                                                                    "nullable": false
                                                                },
                                                                "type": {
                                                                    "description": "Type of an accessory",
                                                                    "enum": [
                                                                        "headWear",
                                                                        "glasses",
                                                                        "mask"
                                                                    ],
                                                                    "type": "string",
                                                                    "x-ms-enum": {
                                                                        "modelAsString": false,
                                                                        "name": "AccessoryType"
                                                                    },
                                                                    "nullable": false
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "age": {
                                                        "description": "Age in years",
                                                        "type": "number"
                                                    },
                                                    "blur": {
                                                        "description": "Properties describing any presence of blur within the image.",
                                                        "properties": {
                                                            "blurLevel": {
                                                                "description": "An enum value indicating level of blurriness.",
                                                                "enum": [
                                                                    "Low",
                                                                    "Medium",
                                                                    "High"
                                                                ],
                                                                "type": "string",
                                                                "x-ms-enum": {
                                                                    "modelAsString": false,
                                                                    "name": "BlurLevel"
                                                                },
                                                                "nullable": false
                                                            },
                                                            "value": {
                                                                "description": "A number indicating level of blurriness ranging from 0 to 1.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "emotion": {
                                                        "description": "Properties describing facial emotion in form of confidence ranging from 0 to 1.",
                                                        "properties": {
                                                            "anger": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "contempt": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "disgust": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "fear": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "happiness": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "neutral": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "sadness": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "surprise": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "exposure": {
                                                        "description": "Properties describing exposure level of the image.",
                                                        "properties": {
                                                            "exposureLevel": {
                                                                "description": "An enum value indicating level of exposure.",
                                                                "enum": [
                                                                    "UnderExposure",
                                                                    "GoodExposure",
                                                                    "OverExposure"
                                                                ],
                                                                "type": "string",
                                                                "x-ms-enum": {
                                                                    "modelAsString": false,
                                                                    "name": "ExposureLevel"
                                                                },
                                                                "nullable": false
                                                            },
                                                            "value": {
                                                                "description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "facialHair": {
                                                        "description": "Properties describing facial hair attributes.",
                                                        "properties": {
                                                            "beard": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "moustache": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "sideburns": {
                                                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "gender": {
                                                        "description": "Possible gender of the face.",
                                                        "enum": [
                                                            "male",
                                                            "female"
                                                        ],
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "Gender"
                                                        }
                                                    },
                                                    "glasses": {
                                                        "description": "Glasses type if any of the face.",
                                                        "enum": [
                                                            "noGlasses",
                                                            "readingGlasses",
                                                            "sunglasses",
                                                            "swimmingGoggles"
                                                        ],
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "GlassesType"
                                                        }
                                                    },
                                                    "hair": {
                                                        "description": "Properties describing hair attributes.",
                                                        "properties": {
                                                            "bald": {
                                                                "description": "A number describing confidence level of whether the person is bald.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "hairColor": {
                                                                "description": "An array of candidate colors and confidence level in the presence of each.",
                                                                "items": {
                                                                    "description": "Hair color and associated confidence",
                                                                    "properties": {
                                                                        "color": {
                                                                            "description": "Name of the hair color.",
                                                                            "enum": [
                                                                                "unknown",
                                                                                "white",
                                                                                "gray",
                                                                                "blond",
                                                                                "brown",
                                                                                "red",
                                                                                "black",
                                                                                "other"
                                                                            ],
                                                                            "type": "string",
                                                                            "x-ms-enum": {
                                                                                "modelAsString": false,
                                                                                "name": "HairColorType"
                                                                            },
                                                                            "nullable": false
                                                                        },
                                                                        "confidence": {
                                                                            "description": "Confidence level of the color",
                                                                            "maximum": 1,
                                                                            "minimum": 0,
                                                                            "type": "number",
                                                                            "nullable": false
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "invisible": {
                                                                "description": "A boolean value describing whether the hair is visible in the image.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "headPose": {
                                                        "description": "Properties indicating head pose of the face.",
                                                        "properties": {
                                                            "pitch": {
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "roll": {
                                                                "type": "number",
                                                                "nullable": false
                                                            },
                                                            "yaw": {
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "makeup": {
                                                        "description": "Properties describing present makeups on a given face.",
                                                        "properties": {
                                                            "eyeMakeup": {
                                                                "description": "A boolean value describing whether eye makeup is present on a face.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            },
                                                            "lipMakeup": {
                                                                "description": "A boolean value describing whether lip makeup is present on a face.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "noise": {
                                                        "description": "Properties describing noise level of the image.",
                                                        "properties": {
                                                            "noiseLevel": {
                                                                "description": "An enum value indicating level of noise.",
                                                                "enum": [
                                                                    "Low",
                                                                    "Medium",
                                                                    "High"
                                                                ],
                                                                "type": "string",
                                                                "x-ms-enum": {
                                                                    "modelAsString": false,
                                                                    "name": "NoiseLevel"
                                                                },
                                                                "nullable": false
                                                            },
                                                            "value": {
                                                                "description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
                                                                "maximum": 1,
                                                                "minimum": 0,
                                                                "type": "number",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "occlusion": {
                                                        "description": "Properties describing occlusions on a given face.",
                                                        "properties": {
                                                            "eyeOccluded": {
                                                                "description": "A boolean value indicating whether eyes are occluded.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            },
                                                            "foreheadOccluded": {
                                                                "description": "A boolean value indicating whether forehead is occluded.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            },
                                                            "mouthOccluded": {
                                                                "description": "A boolean value indicating whether the mouth is occluded.",
                                                                "type": "boolean",
                                                                "nullable": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "smile": {
                                                        "description": "Smile intensity, a number between [0,1] ",
                                                        "maximum": 1,
                                                        "minimum": 0,
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "faceId": {
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "faceLandmarks": {
                                                "description": "A collection of 27-point face landmarks pointing to the important positions of face components.",
                                                "properties": {
                                                    "eyeLeftBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeLeftInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeLeftOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeLeftTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyeRightTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowLeftInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowLeftOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowRightInner": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "eyebrowRightOuter": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "mouthLeft": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "mouthRight": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseLeftAlarOutTip": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseLeftAlarTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRightAlarOutTip": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRightAlarTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRootLeft": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseRootRight": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "noseTip": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "pupilLeft": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "pupilRight": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "underLipBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "underLipTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "upperLipBottom": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "upperLipTop": {
                                                        "description": "Coordinates within an image",
                                                        "properties": {
                                                            "x": {
                                                                "description": "The horizontal component, in pixels.",
                                                                "type": "number"
                                                            },
                                                            "y": {
                                                                "description": "The vertical component, in pixels.",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "x",
                                                            "y"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "faceRectangle": {
                                                "description": "A rectangle within which a face can be found",
                                                "properties": {
                                                    "height": {
                                                        "description": "The height of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "left": {
                                                        "description": "The distance from the left edge if the image to the left edge of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "top": {
                                                        "description": "The distance from the top edge if the image to the top edge of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "width": {
                                                        "description": "The width of the rectangle, in pixels.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "width",
                                                    "height",
                                                    "left",
                                                    "top"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "faceRectangle"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Detect with stream example": {
                        "parameters": {
                            "Content-Type": "application/octet-stream",
                            "Endpoint": "{Endpoint}",
                            "Image": "{Image binary in base 64 format}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "returnFaceAttributes": [
                                "age",
                                "gender",
                                "headPose",
                                "smile",
                                "facialHair",
                                "glasses",
                                "emotion",
                                "hair",
                                "makeup",
                                "occlusion",
                                "accessories",
                                "blur",
                                "exposure",
                                "noise"
                            ]
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "faceAttributes": {
                                            "accessories": [
                                                {
                                                    "confidence": 0.99,
                                                    "type": "headWear"
                                                },
                                                {
                                                    "confidence": 1,
                                                    "type": "glasses"
                                                },
                                                {
                                                    "confidence": 0.87,
                                                    "type": "mask"
                                                }
                                            ],
                                            "age": 71,
                                            "blur": {
                                                "blurLevel": "Medium",
                                                "value": 0.51
                                            },
                                            "emotion": {
                                                "anger": 0.575,
                                                "contempt": 0,
                                                "disgust": 0.006,
                                                "fear": 0.008,
                                                "happiness": 0.394,
                                                "neutral": 0.013,
                                                "sadness": 0,
                                                "surprise": 0.004
                                            },
                                            "exposure": {
                                                "exposureLevel": "GoodExposure",
                                                "value": 0.55
                                            },
                                            "facialHair": {
                                                "beard": 0.1,
                                                "moustache": 0.8,
                                                "sideburns": 0.02
                                            },
                                            "gender": "male",
                                            "glasses": "sunglasses",
                                            "hair": {
                                                "bald": 0,
                                                "hairColor": [
                                                    {
                                                        "color": "brown",
                                                        "confidence": 1
                                                    },
                                                    {
                                                        "color": "blond",
                                                        "confidence": 0.88
                                                    },
                                                    {
                                                        "color": "black",
                                                        "confidence": 0.48
                                                    },
                                                    {
                                                        "color": "other",
                                                        "confidence": 0.11
                                                    },
                                                    {
                                                        "color": "gray",
                                                        "confidence": 0.07
                                                    },
                                                    {
                                                        "color": "red",
                                                        "confidence": 0.03
                                                    }
                                                ],
                                                "invisible": false
                                            },
                                            "headPose": {
                                                "pitch": 0,
                                                "roll": 2.1,
                                                "yaw": 3
                                            },
                                            "makeup": {
                                                "eyeMakeup": true,
                                                "lipMakeup": false
                                            },
                                            "noise": {
                                                "noiseLevel": "Low",
                                                "value": 0.12
                                            },
                                            "occlusion": {
                                                "eyeOccluded": false,
                                                "foreheadOccluded": false,
                                                "mouthOccluded": false
                                            },
                                            "smile": 0.88
                                        },
                                        "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
                                        "faceLandmarks": {
                                            "eyeLeftBottom": {
                                                "x": 413,
                                                "y": 80.1
                                            },
                                            "eyeLeftInner": {
                                                "x": 418.9,
                                                "y": 78
                                            },
                                            "eyeLeftOuter": {
                                                "x": 406.7,
                                                "y": 80.6
                                            },
                                            "eyeLeftTop": {
                                                "x": 412.2,
                                                "y": 76.2
                                            },
                                            "eyeRightBottom": {
                                                "x": 447,
                                                "y": 75.3
                                            },
                                            "eyeRightInner": {
                                                "x": 441.5,
                                                "y": 75
                                            },
                                            "eyeRightOuter": {
                                                "x": 451.7,
                                                "y": 73.4
                                            },
                                            "eyeRightTop": {
                                                "x": 446.4,
                                                "y": 71.7
                                            },
                                            "eyebrowLeftInner": {
                                                "x": 425.4,
                                                "y": 70.5
                                            },
                                            "eyebrowLeftOuter": {
                                                "x": 397.9,
                                                "y": 78.5
                                            },
                                            "eyebrowRightInner": {
                                                "x": 4.8,
                                                "y": 69.7
                                            },
                                            "eyebrowRightOuter": {
                                                "x": 5.5,
                                                "y": 68.5
                                            },
                                            "mouthLeft": {
                                                "x": 417.8,
                                                "y": 114.4
                                            },
                                            "mouthRight": {
                                                "x": 451.3,
                                                "y": 109.3
                                            },
                                            "noseLeftAlarOutTip": {
                                                "x": 424.3,
                                                "y": 96.4
                                            },
                                            "noseLeftAlarTop": {
                                                "x": 428.3,
                                                "y": 89.7
                                            },
                                            "noseRightAlarOutTip": {
                                                "x": 446.6,
                                                "y": 92.5
                                            },
                                            "noseRightAlarTop": {
                                                "x": 442.2,
                                                "y": 87
                                            },
                                            "noseRootLeft": {
                                                "x": 428,
                                                "y": 77.1
                                            },
                                            "noseRootRight": {
                                                "x": 435.8,
                                                "y": 75.6
                                            },
                                            "noseTip": {
                                                "x": 437.7,
                                                "y": 92.4
                                            },
                                            "pupilLeft": {
                                                "x": 412.7,
                                                "y": 78.4
                                            },
                                            "pupilRight": {
                                                "x": 446.8,
                                                "y": 74.2
                                            },
                                            "underLipBottom": {
                                                "x": 437.3,
                                                "y": 114.5
                                            },
                                            "underLipTop": {
                                                "x": 436.8,
                                                "y": 111.4
                                            },
                                            "upperLipBottom": {
                                                "x": 437.6,
                                                "y": 108.2
                                            },
                                            "upperLipTop": {
                                                "x": 437.6,
                                                "y": 105.9
                                            }
                                        },
                                        "faceRectangle": {
                                            "height": 78,
                                            "left": 394,
                                            "top": 54,
                                            "width": 78
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "format": "file",
                                "type": "object"
                            }
                        }
                    },
                    "description": "An image stream.",
                    "required": true
                }
            }
        },
        "/facelists/{faceListId}/persistedfaces?overload=stream": {
            "post": {
                "description": "Add a face to a face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.",
                "operationId": "FaceList_AddFaceFromStream",
                "parameters": [
                    {
                        "description": "Id referencing a particular face list.",
                        "in": "path",
                        "name": "faceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns a new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Add face to face list from stream example": {
                        "parameters": {
                            "Content-Type": "application/octet-stream",
                            "Endpoint": "{Endpoint}",
                            "Image": "{Image stream in base 64 encoded format}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "faceListId": "sample_face_list",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{Customized user data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "format": "file",
                                "type": "object"
                            }
                        }
                    },
                    "description": "An image stream.",
                    "required": true
                }
            }
        },
        "/largefacelists/{largeFaceListId}/persistedfaces?overload=stream": {
            "post": {
                "description": "Add a face to a large face list. The input face is specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.",
                "operationId": "LargeFaceList_AddFaceFromStream",
                "parameters": [
                    {
                        "description": "Id referencing a particular large face list.",
                        "in": "path",
                        "name": "largeFaceListId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns a new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Add face to large face list from stream example": {
                        "parameters": {
                            "Content-Type": "application/octet-stream",
                            "Endpoint": "{Endpoint}",
                            "Image": "{Image stream in base 64 encoded format}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largeFaceListId": "sample_face_list",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{Customized user data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "format": "file",
                                "type": "object"
                            }
                        }
                    },
                    "description": "An image stream.",
                    "required": true
                }
            }
        },
        "/largepersongroups/{largePersonGroupId}/persons/{personId}/persistedfaces?overload=stream": {
            "post": {
                "description": "Add a representative face to a person for identification. The input face is specified as an image with a targetFace rectangle.",
                "operationId": "LargePersonGroupPerson_AddFaceFromStream",
                "parameters": [
                    {
                        "description": "Id referencing a particular large person group.",
                        "in": "path",
                        "name": "largePersonGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Add face to person with stream example": {
                        "parameters": {
                            "Content-Type": "application/octet-stream",
                            "Endpoint": "{Endpoint}",
                            "Image": "{Image stream in base 64 encoded format}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "largePersonGroupId": "abc",
                            "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{customized User data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "format": "file",
                                "type": "object"
                            }
                        }
                    },
                    "description": "An image stream.",
                    "required": true
                }
            }
        },
        "/persongroups/{personGroupId}/persons/{personId}/persistedfaces?overload=stream": {
            "post": {
                "description": "Add a representative face to a person for identification. The input face is specified as an image with a targetFace rectangle.",
                "operationId": "PersonGroupPerson_AddFaceFromStream",
                "parameters": [
                    {
                        "description": "Id referencing a particular person group.",
                        "in": "path",
                        "name": "personGroupId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$"
                        }
                    },
                    {
                        "description": "Id referencing a particular person.",
                        "in": "path",
                        "name": "personId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                        "in": "query",
                        "name": "userData",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                        "in": "query",
                        "name": "targetFace",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "maxItems": 4,
                                "minItems": 4,
                                "type": "integer",
                                "nullable": false
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful call returns the new persistedFaceId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "PersonFace object.",
                                    "properties": {
                                        "persistedFaceId": {
                                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "userData": {
                                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                                            "maxLength": 1024,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "persistedFaceId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Add face to person with stream example": {
                        "parameters": {
                            "Content-Type": "application/octet-stream",
                            "Endpoint": "{Endpoint}",
                            "Image": "{Image stream in base 64 encoded format}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "personGroupId": "abc",
                            "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0",
                            "targetFace": [
                                10,
                                10,
                                100,
                                100
                            ],
                            "userData": "{customized User data}"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "format": "file",
                                "type": "object"
                            }
                        }
                    },
                    "description": "An image stream.",
                    "required": true
                }
            }
        },
        "/verify?overload=person": {
            "post": {
                "description": "Verify whether two faces belong to a same person. Compares a face Id with a Person Id",
                "operationId": "Face_VerifyFaceToPerson",
                "responses": {
                    "200": {
                        "description": "A successful call returns the verification result.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Result of the verify operation.",
                                    "properties": {
                                        "confidence": {
                                            "description": "A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override \"isIdentical\" and fine-tune the result on their own data.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number"
                                        },
                                        "isIdentical": {
                                            "description": "True if the two faces belong to the same person or the face belongs to the person, otherwise false.",
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "isIdentical",
                                        "confidence"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error information returned by the API",
                                    "properties": {
                                        "error": {
                                            "description": "Error body.",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Verify face to person example": {
                        "parameters": {
                            "Content-Type": "application/json",
                            "Endpoint": "{Endpoint}",
                            "Ocp-Apim-Subscription-Key": "{API key}",
                            "body": {
                                "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
                                "largePersonGroupId": "sample_group",
                                "personId": "815df99c-598f-4926-930a-a734b3fd651c"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "confidence": 0.9,
                                    "isIdentical": true
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body for face to person verification.",
                                "properties": {
                                    "faceId": {
                                        "description": "FaceId of the face, comes from Face - Detect",
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "largePersonGroupId": {
                                        "description": "Using existing largePersonGroupId and personId for fast loading a specified person. largePersonGroupId is created in LargePersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    },
                                    "personGroupId": {
                                        "description": "Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in PersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                                        "maxLength": 64,
                                        "pattern": "^[a-z0-9-_]+$",
                                        "type": "string"
                                    },
                                    "personId": {
                                        "description": "Specify a certain person in a person group or a large person group. personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.",
                                        "format": "uuid",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "faceId",
                                    "personId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Request body for face to person verification.",
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIError": {
                "description": "Error information returned by the API",
                "properties": {
                    "error": {
                        "description": "Error body.",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Accessories": {
                "description": "Properties describing any accessories on a given face.",
                "items": {
                    "description": "Accessory item and corresponding confidence level.",
                    "properties": {
                        "confidence": {
                            "description": "Confidence level of an accessory",
                            "maximum": 1,
                            "minimum": 0,
                            "type": "number",
                            "nullable": false
                        },
                        "type": {
                            "description": "Type of an accessory",
                            "enum": [
                                "headWear",
                                "glasses",
                                "mask"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "modelAsString": false,
                                "name": "AccessoryType"
                            },
                            "nullable": false
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Accessory": {
                "description": "Accessory item and corresponding confidence level.",
                "properties": {
                    "confidence": {
                        "description": "Confidence level of an accessory",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "type": {
                        "description": "Type of an accessory",
                        "enum": [
                            "headWear",
                            "glasses",
                            "mask"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "AccessoryType"
                        },
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "ApplyScope": {
                "description": "Array of the target Face subscription ids for the snapshot, specified by the user who created the snapshot when calling Snapshot - Take. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                "items": {
                    "format": "uuid",
                    "type": "string",
                    "nullable": false
                },
                "type": "array"
            },
            "ApplySnapshotRequest": {
                "description": "Request body for applying snapshot operation.",
                "properties": {
                    "mode": {
                        "default": "CreateNew",
                        "description": "Snapshot applying mode. Currently only CreateNew is supported, which means the apply operation will fail if target subscription already contains an object of same type and using the same objectId. Users can specify the \"objectId\" in request body to avoid such conflicts.",
                        "enum": [
                            "CreateNew"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "SnapshotApplyMode"
                        },
                        "nullable": false
                    },
                    "objectId": {
                        "description": "User specified target object id to be created from the snapshot.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "objectId"
                ],
                "type": "object"
            },
            "Blur": {
                "description": "Properties describing any presence of blur within the image.",
                "properties": {
                    "blurLevel": {
                        "description": "An enum value indicating level of blurriness.",
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "BlurLevel"
                        },
                        "nullable": false
                    },
                    "value": {
                        "description": "A number indicating level of blurriness ranging from 0 to 1.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "Confidence": {
                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                "maximum": 1,
                "minimum": 0,
                "type": "number"
            },
            "Coordinate": {
                "description": "Coordinates within an image",
                "properties": {
                    "x": {
                        "description": "The horizontal component, in pixels.",
                        "type": "number"
                    },
                    "y": {
                        "description": "The vertical component, in pixels.",
                        "type": "number"
                    }
                },
                "required": [
                    "x",
                    "y"
                ],
                "type": "object"
            },
            "DetectedFace": {
                "description": "Detected Face object.",
                "properties": {
                    "faceAttributes": {
                        "description": "Face Attributes",
                        "properties": {
                            "accessories": {
                                "description": "Properties describing any accessories on a given face.",
                                "items": {
                                    "description": "Accessory item and corresponding confidence level.",
                                    "properties": {
                                        "confidence": {
                                            "description": "Confidence level of an accessory",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "type": {
                                            "description": "Type of an accessory",
                                            "enum": [
                                                "headWear",
                                                "glasses",
                                                "mask"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "AccessoryType"
                                            },
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "age": {
                                "description": "Age in years",
                                "type": "number"
                            },
                            "blur": {
                                "description": "Properties describing any presence of blur within the image.",
                                "properties": {
                                    "blurLevel": {
                                        "description": "An enum value indicating level of blurriness.",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "BlurLevel"
                                        },
                                        "nullable": false
                                    },
                                    "value": {
                                        "description": "A number indicating level of blurriness ranging from 0 to 1.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "emotion": {
                                "description": "Properties describing facial emotion in form of confidence ranging from 0 to 1.",
                                "properties": {
                                    "anger": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "contempt": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "disgust": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "fear": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "happiness": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "neutral": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "sadness": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "surprise": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "exposure": {
                                "description": "Properties describing exposure level of the image.",
                                "properties": {
                                    "exposureLevel": {
                                        "description": "An enum value indicating level of exposure.",
                                        "enum": [
                                            "UnderExposure",
                                            "GoodExposure",
                                            "OverExposure"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "ExposureLevel"
                                        },
                                        "nullable": false
                                    },
                                    "value": {
                                        "description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "facialHair": {
                                "description": "Properties describing facial hair attributes.",
                                "properties": {
                                    "beard": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "moustache": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "sideburns": {
                                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "gender": {
                                "description": "Possible gender of the face.",
                                "enum": [
                                    "male",
                                    "female"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "Gender"
                                }
                            },
                            "glasses": {
                                "description": "Glasses type if any of the face.",
                                "enum": [
                                    "noGlasses",
                                    "readingGlasses",
                                    "sunglasses",
                                    "swimmingGoggles"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "GlassesType"
                                }
                            },
                            "hair": {
                                "description": "Properties describing hair attributes.",
                                "properties": {
                                    "bald": {
                                        "description": "A number describing confidence level of whether the person is bald.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "hairColor": {
                                        "description": "An array of candidate colors and confidence level in the presence of each.",
                                        "items": {
                                            "description": "Hair color and associated confidence",
                                            "properties": {
                                                "color": {
                                                    "description": "Name of the hair color.",
                                                    "enum": [
                                                        "unknown",
                                                        "white",
                                                        "gray",
                                                        "blond",
                                                        "brown",
                                                        "red",
                                                        "black",
                                                        "other"
                                                    ],
                                                    "type": "string",
                                                    "x-ms-enum": {
                                                        "modelAsString": false,
                                                        "name": "HairColorType"
                                                    },
                                                    "nullable": false
                                                },
                                                "confidence": {
                                                    "description": "Confidence level of the color",
                                                    "maximum": 1,
                                                    "minimum": 0,
                                                    "type": "number",
                                                    "nullable": false
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "invisible": {
                                        "description": "A boolean value describing whether the hair is visible in the image.",
                                        "type": "boolean",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "headPose": {
                                "description": "Properties indicating head pose of the face.",
                                "properties": {
                                    "pitch": {
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "roll": {
                                        "type": "number",
                                        "nullable": false
                                    },
                                    "yaw": {
                                        "type": "number",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "makeup": {
                                "description": "Properties describing present makeups on a given face.",
                                "properties": {
                                    "eyeMakeup": {
                                        "description": "A boolean value describing whether eye makeup is present on a face.",
                                        "type": "boolean",
                                        "nullable": false
                                    },
                                    "lipMakeup": {
                                        "description": "A boolean value describing whether lip makeup is present on a face.",
                                        "type": "boolean",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "noise": {
                                "description": "Properties describing noise level of the image.",
                                "properties": {
                                    "noiseLevel": {
                                        "description": "An enum value indicating level of noise.",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "NoiseLevel"
                                        },
                                        "nullable": false
                                    },
                                    "value": {
                                        "description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "occlusion": {
                                "description": "Properties describing occlusions on a given face.",
                                "properties": {
                                    "eyeOccluded": {
                                        "description": "A boolean value indicating whether eyes are occluded.",
                                        "type": "boolean",
                                        "nullable": false
                                    },
                                    "foreheadOccluded": {
                                        "description": "A boolean value indicating whether forehead is occluded.",
                                        "type": "boolean",
                                        "nullable": false
                                    },
                                    "mouthOccluded": {
                                        "description": "A boolean value indicating whether the mouth is occluded.",
                                        "type": "boolean",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            },
                            "smile": {
                                "description": "Smile intensity, a number between [0,1] ",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "faceId": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "faceLandmarks": {
                        "description": "A collection of 27-point face landmarks pointing to the important positions of face components.",
                        "properties": {
                            "eyeLeftBottom": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyeLeftInner": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyeLeftOuter": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyeLeftTop": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyeRightBottom": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyeRightInner": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyeRightOuter": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyeRightTop": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyebrowLeftInner": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyebrowLeftOuter": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyebrowRightInner": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "eyebrowRightOuter": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "mouthLeft": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "mouthRight": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "noseLeftAlarOutTip": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "noseLeftAlarTop": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "noseRightAlarOutTip": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "noseRightAlarTop": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "noseRootLeft": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "noseRootRight": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "noseTip": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "pupilLeft": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "pupilRight": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "underLipBottom": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "underLipTop": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "upperLipBottom": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            },
                            "upperLipTop": {
                                "description": "Coordinates within an image",
                                "properties": {
                                    "x": {
                                        "description": "The horizontal component, in pixels.",
                                        "type": "number"
                                    },
                                    "y": {
                                        "description": "The vertical component, in pixels.",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "x",
                                    "y"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "faceRectangle": {
                        "description": "A rectangle within which a face can be found",
                        "properties": {
                            "height": {
                                "description": "The height of the rectangle, in pixels.",
                                "format": "int32",
                                "type": "integer"
                            },
                            "left": {
                                "description": "The distance from the left edge if the image to the left edge of the rectangle, in pixels.",
                                "format": "int32",
                                "type": "integer"
                            },
                            "top": {
                                "description": "The distance from the top edge if the image to the top edge of the rectangle, in pixels.",
                                "format": "int32",
                                "type": "integer"
                            },
                            "width": {
                                "description": "The width of the rectangle, in pixels.",
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "width",
                            "height",
                            "left",
                            "top"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "faceRectangle"
                ],
                "type": "object"
            },
            "DetectedFaces": {
                "items": {
                    "description": "Detected Face object.",
                    "properties": {
                        "faceAttributes": {
                            "description": "Face Attributes",
                            "properties": {
                                "accessories": {
                                    "description": "Properties describing any accessories on a given face.",
                                    "items": {
                                        "description": "Accessory item and corresponding confidence level.",
                                        "properties": {
                                            "confidence": {
                                                "description": "Confidence level of an accessory",
                                                "maximum": 1,
                                                "minimum": 0,
                                                "type": "number",
                                                "nullable": false
                                            },
                                            "type": {
                                                "description": "Type of an accessory",
                                                "enum": [
                                                    "headWear",
                                                    "glasses",
                                                    "mask"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "AccessoryType"
                                                },
                                                "nullable": false
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "age": {
                                    "description": "Age in years",
                                    "type": "number"
                                },
                                "blur": {
                                    "description": "Properties describing any presence of blur within the image.",
                                    "properties": {
                                        "blurLevel": {
                                            "description": "An enum value indicating level of blurriness.",
                                            "enum": [
                                                "Low",
                                                "Medium",
                                                "High"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "BlurLevel"
                                            },
                                            "nullable": false
                                        },
                                        "value": {
                                            "description": "A number indicating level of blurriness ranging from 0 to 1.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "emotion": {
                                    "description": "Properties describing facial emotion in form of confidence ranging from 0 to 1.",
                                    "properties": {
                                        "anger": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "contempt": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "disgust": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "fear": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "happiness": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "neutral": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "sadness": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "surprise": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "exposure": {
                                    "description": "Properties describing exposure level of the image.",
                                    "properties": {
                                        "exposureLevel": {
                                            "description": "An enum value indicating level of exposure.",
                                            "enum": [
                                                "UnderExposure",
                                                "GoodExposure",
                                                "OverExposure"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "ExposureLevel"
                                            },
                                            "nullable": false
                                        },
                                        "value": {
                                            "description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "facialHair": {
                                    "description": "Properties describing facial hair attributes.",
                                    "properties": {
                                        "beard": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "moustache": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "sideburns": {
                                            "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "gender": {
                                    "description": "Possible gender of the face.",
                                    "enum": [
                                        "male",
                                        "female"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                        "modelAsString": false,
                                        "name": "Gender"
                                    }
                                },
                                "glasses": {
                                    "description": "Glasses type if any of the face.",
                                    "enum": [
                                        "noGlasses",
                                        "readingGlasses",
                                        "sunglasses",
                                        "swimmingGoggles"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                        "modelAsString": false,
                                        "name": "GlassesType"
                                    }
                                },
                                "hair": {
                                    "description": "Properties describing hair attributes.",
                                    "properties": {
                                        "bald": {
                                            "description": "A number describing confidence level of whether the person is bald.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "hairColor": {
                                            "description": "An array of candidate colors and confidence level in the presence of each.",
                                            "items": {
                                                "description": "Hair color and associated confidence",
                                                "properties": {
                                                    "color": {
                                                        "description": "Name of the hair color.",
                                                        "enum": [
                                                            "unknown",
                                                            "white",
                                                            "gray",
                                                            "blond",
                                                            "brown",
                                                            "red",
                                                            "black",
                                                            "other"
                                                        ],
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "HairColorType"
                                                        },
                                                        "nullable": false
                                                    },
                                                    "confidence": {
                                                        "description": "Confidence level of the color",
                                                        "maximum": 1,
                                                        "minimum": 0,
                                                        "type": "number",
                                                        "nullable": false
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "invisible": {
                                            "description": "A boolean value describing whether the hair is visible in the image.",
                                            "type": "boolean",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "headPose": {
                                    "description": "Properties indicating head pose of the face.",
                                    "properties": {
                                        "pitch": {
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "roll": {
                                            "type": "number",
                                            "nullable": false
                                        },
                                        "yaw": {
                                            "type": "number",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "makeup": {
                                    "description": "Properties describing present makeups on a given face.",
                                    "properties": {
                                        "eyeMakeup": {
                                            "description": "A boolean value describing whether eye makeup is present on a face.",
                                            "type": "boolean",
                                            "nullable": false
                                        },
                                        "lipMakeup": {
                                            "description": "A boolean value describing whether lip makeup is present on a face.",
                                            "type": "boolean",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "noise": {
                                    "description": "Properties describing noise level of the image.",
                                    "properties": {
                                        "noiseLevel": {
                                            "description": "An enum value indicating level of noise.",
                                            "enum": [
                                                "Low",
                                                "Medium",
                                                "High"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "NoiseLevel"
                                            },
                                            "nullable": false
                                        },
                                        "value": {
                                            "description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "occlusion": {
                                    "description": "Properties describing occlusions on a given face.",
                                    "properties": {
                                        "eyeOccluded": {
                                            "description": "A boolean value indicating whether eyes are occluded.",
                                            "type": "boolean",
                                            "nullable": false
                                        },
                                        "foreheadOccluded": {
                                            "description": "A boolean value indicating whether forehead is occluded.",
                                            "type": "boolean",
                                            "nullable": false
                                        },
                                        "mouthOccluded": {
                                            "description": "A boolean value indicating whether the mouth is occluded.",
                                            "type": "boolean",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "smile": {
                                    "description": "Smile intensity, a number between [0,1] ",
                                    "maximum": 1,
                                    "minimum": 0,
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "faceId": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "faceLandmarks": {
                            "description": "A collection of 27-point face landmarks pointing to the important positions of face components.",
                            "properties": {
                                "eyeLeftBottom": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyeLeftInner": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyeLeftOuter": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyeLeftTop": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyeRightBottom": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyeRightInner": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyeRightOuter": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyeRightTop": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyebrowLeftInner": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyebrowLeftOuter": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyebrowRightInner": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "eyebrowRightOuter": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "mouthLeft": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "mouthRight": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "noseLeftAlarOutTip": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "noseLeftAlarTop": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "noseRightAlarOutTip": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "noseRightAlarTop": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "noseRootLeft": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "noseRootRight": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "noseTip": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "pupilLeft": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "pupilRight": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "underLipBottom": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "underLipTop": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "upperLipBottom": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                },
                                "upperLipTop": {
                                    "description": "Coordinates within an image",
                                    "properties": {
                                        "x": {
                                            "description": "The horizontal component, in pixels.",
                                            "type": "number"
                                        },
                                        "y": {
                                            "description": "The vertical component, in pixels.",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "faceRectangle": {
                            "description": "A rectangle within which a face can be found",
                            "properties": {
                                "height": {
                                    "description": "The height of the rectangle, in pixels.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "left": {
                                    "description": "The distance from the left edge if the image to the left edge of the rectangle, in pixels.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "top": {
                                    "description": "The distance from the top edge if the image to the top edge of the rectangle, in pixels.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "width": {
                                    "description": "The width of the rectangle, in pixels.",
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "width",
                                "height",
                                "left",
                                "top"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "faceRectangle"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "Emotion": {
                "description": "Properties describing facial emotion in form of confidence ranging from 0 to 1.",
                "properties": {
                    "anger": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "contempt": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "disgust": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "fear": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "happiness": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "neutral": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "sadness": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "surprise": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "Error": {
                "description": "Error body.",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Exposure": {
                "description": "Properties describing exposure level of the image.",
                "properties": {
                    "exposureLevel": {
                        "description": "An enum value indicating level of exposure.",
                        "enum": [
                            "UnderExposure",
                            "GoodExposure",
                            "OverExposure"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "ExposureLevel"
                        },
                        "nullable": false
                    },
                    "value": {
                        "description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "FaceAttributes": {
                "description": "Face Attributes",
                "properties": {
                    "accessories": {
                        "description": "Properties describing any accessories on a given face.",
                        "items": {
                            "description": "Accessory item and corresponding confidence level.",
                            "properties": {
                                "confidence": {
                                    "description": "Confidence level of an accessory",
                                    "maximum": 1,
                                    "minimum": 0,
                                    "type": "number",
                                    "nullable": false
                                },
                                "type": {
                                    "description": "Type of an accessory",
                                    "enum": [
                                        "headWear",
                                        "glasses",
                                        "mask"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                        "modelAsString": false,
                                        "name": "AccessoryType"
                                    },
                                    "nullable": false
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "age": {
                        "description": "Age in years",
                        "type": "number"
                    },
                    "blur": {
                        "description": "Properties describing any presence of blur within the image.",
                        "properties": {
                            "blurLevel": {
                                "description": "An enum value indicating level of blurriness.",
                                "enum": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "BlurLevel"
                                },
                                "nullable": false
                            },
                            "value": {
                                "description": "A number indicating level of blurriness ranging from 0 to 1.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "emotion": {
                        "description": "Properties describing facial emotion in form of confidence ranging from 0 to 1.",
                        "properties": {
                            "anger": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "contempt": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "disgust": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "fear": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "happiness": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "neutral": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "sadness": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "surprise": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "exposure": {
                        "description": "Properties describing exposure level of the image.",
                        "properties": {
                            "exposureLevel": {
                                "description": "An enum value indicating level of exposure.",
                                "enum": [
                                    "UnderExposure",
                                    "GoodExposure",
                                    "OverExposure"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "ExposureLevel"
                                },
                                "nullable": false
                            },
                            "value": {
                                "description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "facialHair": {
                        "description": "Properties describing facial hair attributes.",
                        "properties": {
                            "beard": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "moustache": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "sideburns": {
                                "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "gender": {
                        "description": "Possible gender of the face.",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "Gender"
                        }
                    },
                    "glasses": {
                        "description": "Glasses type if any of the face.",
                        "enum": [
                            "noGlasses",
                            "readingGlasses",
                            "sunglasses",
                            "swimmingGoggles"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "GlassesType"
                        }
                    },
                    "hair": {
                        "description": "Properties describing hair attributes.",
                        "properties": {
                            "bald": {
                                "description": "A number describing confidence level of whether the person is bald.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            },
                            "hairColor": {
                                "description": "An array of candidate colors and confidence level in the presence of each.",
                                "items": {
                                    "description": "Hair color and associated confidence",
                                    "properties": {
                                        "color": {
                                            "description": "Name of the hair color.",
                                            "enum": [
                                                "unknown",
                                                "white",
                                                "gray",
                                                "blond",
                                                "brown",
                                                "red",
                                                "black",
                                                "other"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "HairColorType"
                                            },
                                            "nullable": false
                                        },
                                        "confidence": {
                                            "description": "Confidence level of the color",
                                            "maximum": 1,
                                            "minimum": 0,
                                            "type": "number",
                                            "nullable": false
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "invisible": {
                                "description": "A boolean value describing whether the hair is visible in the image.",
                                "type": "boolean",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "headPose": {
                        "description": "Properties indicating head pose of the face.",
                        "properties": {
                            "pitch": {
                                "type": "number",
                                "nullable": false
                            },
                            "roll": {
                                "type": "number",
                                "nullable": false
                            },
                            "yaw": {
                                "type": "number",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "makeup": {
                        "description": "Properties describing present makeups on a given face.",
                        "properties": {
                            "eyeMakeup": {
                                "description": "A boolean value describing whether eye makeup is present on a face.",
                                "type": "boolean",
                                "nullable": false
                            },
                            "lipMakeup": {
                                "description": "A boolean value describing whether lip makeup is present on a face.",
                                "type": "boolean",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "noise": {
                        "description": "Properties describing noise level of the image.",
                        "properties": {
                            "noiseLevel": {
                                "description": "An enum value indicating level of noise.",
                                "enum": [
                                    "Low",
                                    "Medium",
                                    "High"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "NoiseLevel"
                                },
                                "nullable": false
                            },
                            "value": {
                                "description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "number",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "occlusion": {
                        "description": "Properties describing occlusions on a given face.",
                        "properties": {
                            "eyeOccluded": {
                                "description": "A boolean value indicating whether eyes are occluded.",
                                "type": "boolean",
                                "nullable": false
                            },
                            "foreheadOccluded": {
                                "description": "A boolean value indicating whether forehead is occluded.",
                                "type": "boolean",
                                "nullable": false
                            },
                            "mouthOccluded": {
                                "description": "A boolean value indicating whether the mouth is occluded.",
                                "type": "boolean",
                                "nullable": false
                            }
                        },
                        "type": "object"
                    },
                    "smile": {
                        "description": "Smile intensity, a number between [0,1] ",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "FaceLandmarks": {
                "description": "A collection of 27-point face landmarks pointing to the important positions of face components.",
                "properties": {
                    "eyeLeftBottom": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyeLeftInner": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyeLeftOuter": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyeLeftTop": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyeRightBottom": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyeRightInner": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyeRightOuter": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyeRightTop": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyebrowLeftInner": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyebrowLeftOuter": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyebrowRightInner": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "eyebrowRightOuter": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "mouthLeft": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "mouthRight": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "noseLeftAlarOutTip": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "noseLeftAlarTop": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "noseRightAlarOutTip": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "noseRightAlarTop": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "noseRootLeft": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "noseRootRight": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "noseTip": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "pupilLeft": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "pupilRight": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "underLipBottom": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "underLipTop": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "upperLipBottom": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    },
                    "upperLipTop": {
                        "description": "Coordinates within an image",
                        "properties": {
                            "x": {
                                "description": "The horizontal component, in pixels.",
                                "type": "number"
                            },
                            "y": {
                                "description": "The vertical component, in pixels.",
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "FaceList": {
                "allOf": [
                    {
                        "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                        "properties": {
                            "name": {
                                "description": "User defined name, maximum length is 128.",
                                "maxLength": 128,
                                "type": "string"
                            },
                            "userData": {
                                "description": "User specified data. Length should not exceed 16KB.",
                                "maxLength": 16384,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Face list object.",
                "properties": {
                    "faceListId": {
                        "description": "FaceListId of the target face list.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    },
                    "persistedFaces": {
                        "description": "Persisted faces within the face list.",
                        "items": {
                            "description": "PersonFace object.",
                            "properties": {
                                "persistedFaceId": {
                                    "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                    "format": "uuid",
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User-provided data attached to the face. The size limit is 1KB.",
                                    "maxLength": 1024,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "persistedFaceId"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "faceListId"
                ],
                "type": "object"
            },
            "FaceLists": {
                "description": "An array of face list results, with fields of faceListId, name and userData",
                "items": {
                    "allOf": [
                        {
                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                            "properties": {
                                "name": {
                                    "description": "User defined name, maximum length is 128.",
                                    "maxLength": 128,
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User specified data. Length should not exceed 16KB.",
                                    "maxLength": 16384,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ],
                    "description": "Face list object.",
                    "properties": {
                        "faceListId": {
                            "description": "FaceListId of the target face list.",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$",
                            "type": "string"
                        },
                        "persistedFaces": {
                            "description": "Persisted faces within the face list.",
                            "items": {
                                "description": "PersonFace object.",
                                "properties": {
                                    "persistedFaceId": {
                                        "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                                        "format": "uuid",
                                        "type": "string"
                                    },
                                    "userData": {
                                        "description": "User-provided data attached to the face. The size limit is 1KB.",
                                        "maxLength": 1024,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "persistedFaceId"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "faceListId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "FaceRectangle": {
                "description": "A rectangle within which a face can be found",
                "properties": {
                    "height": {
                        "description": "The height of the rectangle, in pixels.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "left": {
                        "description": "The distance from the left edge if the image to the left edge of the rectangle, in pixels.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "top": {
                        "description": "The distance from the top edge if the image to the top edge of the rectangle, in pixels.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "width": {
                        "description": "The width of the rectangle, in pixels.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "width",
                    "height",
                    "left",
                    "top"
                ],
                "type": "object"
            },
            "FacialHair": {
                "description": "Properties describing facial hair attributes.",
                "properties": {
                    "beard": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "moustache": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "sideburns": {
                        "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "FindSimilarRequest": {
                "description": "Request body for find similar operation.",
                "properties": {
                    "faceId": {
                        "description": "FaceId of the query face. User needs to call Face - Detect first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call",
                        "format": "uuid",
                        "type": "string"
                    },
                    "faceIds": {
                        "description": "An array of candidate faceIds. All of them are created by Face - Detect and the faceIds will expire 24 hours after the detection call. The number of faceIds is limited to 1000. Parameter faceListId, largeFaceListId and faceIds should not be provided at the same time.",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "maxItems": 1000,
                        "type": "array"
                    },
                    "faceListId": {
                        "description": "An existing user-specified unique candidate face list, created in Face List - Create a Face List. Face list contains a set of persistedFaceIds which are persisted and will never expire. Parameter faceListId, largeFaceListId and faceIds should not be provided at the same time.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    },
                    "largeFaceListId": {
                        "description": "An existing user-specified unique candidate large face list, created in LargeFaceList - Create. Large face list contains a set of persistedFaceIds which are persisted and will never expire. Parameter faceListId, largeFaceListId and faceIds should not be provided at the same time.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    },
                    "maxNumOfCandidatesReturned": {
                        "default": 20,
                        "description": "The number of top similar faces returned. The valid range is [1, 1000].",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "mode": {
                        "default": "matchPerson",
                        "description": "Similar face searching mode. It can be \"matchPerson\" or \"matchFace\".",
                        "enum": [
                            "matchPerson",
                            "matchFace"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "FindSimilarMatchMode"
                        },
                        "nullable": false
                    }
                },
                "required": [
                    "faceId"
                ],
                "type": "object"
            },
            "GroupRequest": {
                "description": "Request body for group request.",
                "properties": {
                    "faceIds": {
                        "description": "Array of candidate faceId created by Face - Detect. The maximum is 1000 faces",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "nullable": false
                        },
                        "maxItems": 1000,
                        "type": "array"
                    }
                },
                "required": [
                    "faceIds"
                ],
                "type": "object"
            },
            "GroupResult": {
                "description": "An array of face groups based on face similarity.",
                "properties": {
                    "groups": {
                        "description": "A partition of the original faces based on face similarity. Groups are ranked by number of faces",
                        "items": {
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "nullable": false
                            },
                            "type": "array"
                        },
                        "type": "array"
                    },
                    "messyGroup": {
                        "description": "Face ids array of faces that cannot find any similar faces from original faces.",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "nullable": false
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "groups"
                ],
                "type": "object"
            },
            "Hair": {
                "description": "Properties describing hair attributes.",
                "properties": {
                    "bald": {
                        "description": "A number describing confidence level of whether the person is bald.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    },
                    "hairColor": {
                        "description": "An array of candidate colors and confidence level in the presence of each.",
                        "items": {
                            "description": "Hair color and associated confidence",
                            "properties": {
                                "color": {
                                    "description": "Name of the hair color.",
                                    "enum": [
                                        "unknown",
                                        "white",
                                        "gray",
                                        "blond",
                                        "brown",
                                        "red",
                                        "black",
                                        "other"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                        "modelAsString": false,
                                        "name": "HairColorType"
                                    },
                                    "nullable": false
                                },
                                "confidence": {
                                    "description": "Confidence level of the color",
                                    "maximum": 1,
                                    "minimum": 0,
                                    "type": "number",
                                    "nullable": false
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "invisible": {
                        "description": "A boolean value describing whether the hair is visible in the image.",
                        "type": "boolean",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "HairColor": {
                "description": "Hair color and associated confidence",
                "properties": {
                    "color": {
                        "description": "Name of the hair color.",
                        "enum": [
                            "unknown",
                            "white",
                            "gray",
                            "blond",
                            "brown",
                            "red",
                            "black",
                            "other"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "HairColorType"
                        },
                        "nullable": false
                    },
                    "confidence": {
                        "description": "Confidence level of the color",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "HairColors": {
                "items": {
                    "description": "Hair color and associated confidence",
                    "properties": {
                        "color": {
                            "description": "Name of the hair color.",
                            "enum": [
                                "unknown",
                                "white",
                                "gray",
                                "blond",
                                "brown",
                                "red",
                                "black",
                                "other"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "modelAsString": false,
                                "name": "HairColorType"
                            },
                            "nullable": false
                        },
                        "confidence": {
                            "description": "Confidence level of the color",
                            "maximum": 1,
                            "minimum": 0,
                            "type": "number",
                            "nullable": false
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "HeadPose": {
                "description": "Properties indicating head pose of the face.",
                "properties": {
                    "pitch": {
                        "type": "number",
                        "nullable": false
                    },
                    "roll": {
                        "type": "number",
                        "nullable": false
                    },
                    "yaw": {
                        "type": "number",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "IdentifyCandidate": {
                "description": "All possible faces that may qualify.",
                "properties": {
                    "confidence": {
                        "description": "Confidence threshold of identification, used to judge whether one face belong to one person. The range of confidenceThreshold is [0, 1] (default specified by algorithm).",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number"
                    },
                    "personId": {
                        "description": "Id of candidate",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "personId",
                    "confidence"
                ],
                "type": "object"
            },
            "IdentifyRequest": {
                "description": "Request body for identify face operation.",
                "properties": {
                    "confidenceThreshold": {
                        "description": "Confidence threshold of identification, used to judge whether one face belong to one person. The range of confidenceThreshold is [0, 1] (default specified by algorithm).",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number"
                    },
                    "faceIds": {
                        "description": "Array of query faces faceIds, created by the Face - Detect. Each of the faces are identified independently. The valid number of faceIds is between [1, 10].",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "nullable": false
                        },
                        "maxItems": 10,
                        "type": "array"
                    },
                    "largePersonGroupId": {
                        "description": "LargePersonGroupId of the target large person group, created by LargePersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    },
                    "maxNumOfCandidatesReturned": {
                        "default": 1,
                        "description": "The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1).",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "personGroupId": {
                        "description": "PersonGroupId of the target person group, created by PersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "faceIds"
                ],
                "type": "object"
            },
            "IdentifyResult": {
                "description": "Response body for identify face operation.",
                "properties": {
                    "candidates": {
                        "description": "Identified person candidates for that face (ranked by confidence). Array size should be no larger than input maxNumOfCandidatesReturned. If no person is identified, will return an empty array.",
                        "items": {
                            "description": "All possible faces that may qualify.",
                            "properties": {
                                "confidence": {
                                    "description": "Confidence threshold of identification, used to judge whether one face belong to one person. The range of confidenceThreshold is [0, 1] (default specified by algorithm).",
                                    "maximum": 1,
                                    "minimum": 0,
                                    "type": "number"
                                },
                                "personId": {
                                    "description": "Id of candidate",
                                    "format": "uuid",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "personId",
                                "confidence"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "faceId": {
                        "description": "FaceId of the query face",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "faceId",
                    "candidates"
                ],
                "type": "object"
            },
            "IdentifyResults": {
                "items": {
                    "description": "Response body for identify face operation.",
                    "properties": {
                        "candidates": {
                            "description": "Identified person candidates for that face (ranked by confidence). Array size should be no larger than input maxNumOfCandidatesReturned. If no person is identified, will return an empty array.",
                            "items": {
                                "description": "All possible faces that may qualify.",
                                "properties": {
                                    "confidence": {
                                        "description": "Confidence threshold of identification, used to judge whether one face belong to one person. The range of confidenceThreshold is [0, 1] (default specified by algorithm).",
                                        "maximum": 1,
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "personId": {
                                        "description": "Id of candidate",
                                        "format": "uuid",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "personId",
                                    "confidence"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "faceId": {
                            "description": "FaceId of the query face",
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "required": [
                        "faceId",
                        "candidates"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "LargeFaceList": {
                "allOf": [
                    {
                        "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                        "properties": {
                            "name": {
                                "description": "User defined name, maximum length is 128.",
                                "maxLength": 128,
                                "type": "string"
                            },
                            "userData": {
                                "description": "User specified data. Length should not exceed 16KB.",
                                "maxLength": 16384,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Large face list object.",
                "properties": {
                    "largeFaceListId": {
                        "description": "LargeFaceListId of the target large face list.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "largeFaceListId"
                ],
                "type": "object"
            },
            "LargeFaceLists": {
                "description": "An array of large face list results, with fields of largeFaceListId, name and userData",
                "items": {
                    "allOf": [
                        {
                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                            "properties": {
                                "name": {
                                    "description": "User defined name, maximum length is 128.",
                                    "maxLength": 128,
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User specified data. Length should not exceed 16KB.",
                                    "maxLength": 16384,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ],
                    "description": "Large face list object.",
                    "properties": {
                        "largeFaceListId": {
                            "description": "LargeFaceListId of the target large face list.",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "largeFaceListId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "LargePersonGroup": {
                "allOf": [
                    {
                        "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                        "properties": {
                            "name": {
                                "description": "User defined name, maximum length is 128.",
                                "maxLength": 128,
                                "type": "string"
                            },
                            "userData": {
                                "description": "User specified data. Length should not exceed 16KB.",
                                "maxLength": 16384,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Large person group object.",
                "properties": {
                    "largePersonGroupId": {
                        "description": "LargePersonGroupId of the target large person groups",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "largePersonGroupId"
                ],
                "type": "object"
            },
            "LargePersonGroups": {
                "description": "An array of large person groups.",
                "items": {
                    "allOf": [
                        {
                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                            "properties": {
                                "name": {
                                    "description": "User defined name, maximum length is 128.",
                                    "maxLength": 128,
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User specified data. Length should not exceed 16KB.",
                                    "maxLength": 16384,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ],
                    "description": "Large person group object.",
                    "properties": {
                        "largePersonGroupId": {
                            "description": "LargePersonGroupId of the target large person groups",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "largePersonGroupId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "Level": {
                "description": "A number ranging from 0 to 1 indicating the intensity level associated with a property.",
                "maximum": 1,
                "minimum": 0,
                "type": "number"
            },
            "Makeup": {
                "description": "Properties describing present makeups on a given face.",
                "properties": {
                    "eyeMakeup": {
                        "description": "A boolean value describing whether eye makeup is present on a face.",
                        "type": "boolean",
                        "nullable": false
                    },
                    "lipMakeup": {
                        "description": "A boolean value describing whether lip makeup is present on a face.",
                        "type": "boolean",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "NameAndUserDataContract": {
                "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                "properties": {
                    "name": {
                        "description": "User defined name, maximum length is 128.",
                        "maxLength": 128,
                        "type": "string"
                    },
                    "userData": {
                        "description": "User specified data. Length should not exceed 16KB.",
                        "maxLength": 16384,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Noise": {
                "description": "Properties describing noise level of the image.",
                "properties": {
                    "noiseLevel": {
                        "description": "An enum value indicating level of noise.",
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "NoiseLevel"
                        },
                        "nullable": false
                    },
                    "value": {
                        "description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "Occlusion": {
                "description": "Properties describing occlusions on a given face.",
                "properties": {
                    "eyeOccluded": {
                        "description": "A boolean value indicating whether eyes are occluded.",
                        "type": "boolean",
                        "nullable": false
                    },
                    "foreheadOccluded": {
                        "description": "A boolean value indicating whether forehead is occluded.",
                        "type": "boolean",
                        "nullable": false
                    },
                    "mouthOccluded": {
                        "description": "A boolean value indicating whether the mouth is occluded.",
                        "type": "boolean",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "OperationStatus": {
                "description": "Operation status object. Operation refers to the asynchronous backend task including taking a snapshot and applying a snapshot.",
                "properties": {
                    "createdTime": {
                        "description": "A combined UTC date and time string that describes the time when the operation (take or apply a snapshot) is requested. E.g. 2018-12-25T11:41:02.2331413Z.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastActionTime": {
                        "description": "A combined UTC date and time string that describes the last time the operation (take or apply a snapshot) is actively migrating data. The lastActionTime will keep increasing until the operation finishes. E.g. 2018-12-25T11:51:27.8705696Z.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "message": {
                        "description": "Show failure message when operation fails (omitted when operation succeeds).",
                        "type": "string"
                    },
                    "resourceLocation": {
                        "description": "When the operation succeeds successfully, for snapshot taking operation the snapshot id will be included in this field, and for snapshot applying operation, the path to get the target object will be returned in this field.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Operation status: notstarted, running, succeeded, failed. If the operation is requested and waiting to perform, the status is notstarted. If the operation is ongoing in backend, the status is running. Status succeeded means the operation is completed successfully, specifically for snapshot taking operation, it illustrates the snapshot is well taken and ready to apply, and for snapshot applying operation, it presents the target object has finished creating by the snapshot and ready to be used. Status failed is often caused by editing the source object while taking the snapshot or editing the target object while applying the snapshot before completion, see the field \"message\" to check the failure reason.",
                        "enum": [
                            "notstarted",
                            "running",
                            "succeeded",
                            "failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "OperationStatusType"
                        }
                    }
                },
                "required": [
                    "status",
                    "createdTime"
                ],
                "type": "object"
            },
            "PersistedFace": {
                "description": "PersonFace object.",
                "properties": {
                    "persistedFaceId": {
                        "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "userData": {
                        "description": "User-provided data attached to the face. The size limit is 1KB.",
                        "maxLength": 1024,
                        "type": "string"
                    }
                },
                "required": [
                    "persistedFaceId"
                ],
                "type": "object"
            },
            "PersistedFaces": {
                "description": "An array of persisted faces within the face list or large face list.",
                "items": {
                    "description": "PersonFace object.",
                    "properties": {
                        "persistedFaceId": {
                            "description": "The persistedFaceId of the target face, which is persisted and will not expire. Different from faceId created by Face - Detect and will expire in 24 hours after the detection call.",
                            "format": "uuid",
                            "type": "string"
                        },
                        "userData": {
                            "description": "User-provided data attached to the face. The size limit is 1KB.",
                            "maxLength": 1024,
                            "type": "string"
                        }
                    },
                    "required": [
                        "persistedFaceId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "Person": {
                "allOf": [
                    {
                        "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                        "properties": {
                            "name": {
                                "description": "User defined name, maximum length is 128.",
                                "maxLength": 128,
                                "type": "string"
                            },
                            "userData": {
                                "description": "User specified data. Length should not exceed 16KB.",
                                "maxLength": 16384,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Person object.",
                "properties": {
                    "persistedFaceIds": {
                        "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "nullable": false
                        },
                        "type": "array"
                    },
                    "personId": {
                        "description": "PersonId of the target face list.",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "personId"
                ],
                "type": "object"
            },
            "PersonGroup": {
                "allOf": [
                    {
                        "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                        "properties": {
                            "name": {
                                "description": "User defined name, maximum length is 128.",
                                "maxLength": 128,
                                "type": "string"
                            },
                            "userData": {
                                "description": "User specified data. Length should not exceed 16KB.",
                                "maxLength": 16384,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Person group object.",
                "properties": {
                    "personGroupId": {
                        "description": "PersonGroupId of the target person group.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "personGroupId"
                ],
                "type": "object"
            },
            "PersonGroups": {
                "description": "An array of person groups.",
                "items": {
                    "allOf": [
                        {
                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                            "properties": {
                                "name": {
                                    "description": "User defined name, maximum length is 128.",
                                    "maxLength": 128,
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User specified data. Length should not exceed 16KB.",
                                    "maxLength": 16384,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ],
                    "description": "Person group object.",
                    "properties": {
                        "personGroupId": {
                            "description": "PersonGroupId of the target person group.",
                            "maxLength": 64,
                            "pattern": "^[a-z0-9-_]+$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "personGroupId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "Persons": {
                "description": "An array of Persons.",
                "items": {
                    "allOf": [
                        {
                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                            "properties": {
                                "name": {
                                    "description": "User defined name, maximum length is 128.",
                                    "maxLength": 128,
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User specified data. Length should not exceed 16KB.",
                                    "maxLength": 16384,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ],
                    "description": "Person object.",
                    "properties": {
                        "persistedFaceIds": {
                            "description": "PersistedFaceIds of registered faces in the person. These persistedFaceIds are returned from Person - Add a Person Face, and will not expire.",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "nullable": false
                            },
                            "type": "array"
                        },
                        "personId": {
                            "description": "PersonId of the target face list.",
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "required": [
                        "personId"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "SimilarFace": {
                "description": "Response body for find similar face operation.",
                "properties": {
                    "confidence": {
                        "description": "Similarity confidence of the candidate face. The higher confidence, the more similar. Range between [0,1].",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number"
                    },
                    "faceId": {
                        "description": "FaceId of candidate face when find by faceIds. faceId is created by Face - Detect and will expire 24 hours after the detection call",
                        "format": "uuid",
                        "type": "string"
                    },
                    "persistedFaceId": {
                        "description": "PersistedFaceId of candidate face when find by faceListId. persistedFaceId in face list is persisted and will not expire. As showed in below response",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "confidence"
                ],
                "type": "object"
            },
            "SimilarFaces": {
                "items": {
                    "description": "Response body for find similar face operation.",
                    "properties": {
                        "confidence": {
                            "description": "Similarity confidence of the candidate face. The higher confidence, the more similar. Range between [0,1].",
                            "maximum": 1,
                            "minimum": 0,
                            "type": "number"
                        },
                        "faceId": {
                            "description": "FaceId of candidate face when find by faceIds. faceId is created by Face - Detect and will expire 24 hours after the detection call",
                            "format": "uuid",
                            "type": "string"
                        },
                        "persistedFaceId": {
                            "description": "PersistedFaceId of candidate face when find by faceListId. persistedFaceId in face list is persisted and will not expire. As showed in below response",
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "required": [
                        "confidence"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "Snapshot": {
                "description": "Snapshot object.",
                "properties": {
                    "account": {
                        "description": "Azure Cognitive Service Face account id of the subscriber who created the snapshot by Snapshot - Take.",
                        "type": "string"
                    },
                    "applyScope": {
                        "description": "Array of the target Face subscription ids for the snapshot, specified by the user who created the snapshot when calling Snapshot - Take. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "nullable": false
                        },
                        "type": "array"
                    },
                    "createdTime": {
                        "description": "A combined UTC date and time string that describes the created time of the snapshot. E.g. 2018-12-25T11:41:02.2331413Z.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "description": "Snapshot id.",
                        "format": "uuid",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "A combined UTC date and time string that describes the last time when the snapshot was created or updated by Snapshot - Update. E.g. 2018-12-25T11:51:27.8705696Z.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the source object in the snapshot, specified by the subscriber who created the snapshot when calling Snapshot - Take. Currently FaceList, PersonGroup, LargeFaceList and LargePersonGroup are supported.",
                        "enum": [
                            "FaceList",
                            "LargeFaceList",
                            "LargePersonGroup",
                            "PersonGroup"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "SnapshotObjectType"
                        }
                    },
                    "userData": {
                        "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                        "maxLength": 16384,
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "account",
                    "type",
                    "applyScope",
                    "createdTime",
                    "lastUpdateTime"
                ],
                "type": "object"
            },
            "Snapshots": {
                "description": "An array of snapshots.",
                "items": {
                    "description": "Snapshot object.",
                    "properties": {
                        "account": {
                            "description": "Azure Cognitive Service Face account id of the subscriber who created the snapshot by Snapshot - Take.",
                            "type": "string"
                        },
                        "applyScope": {
                            "description": "Array of the target Face subscription ids for the snapshot, specified by the user who created the snapshot when calling Snapshot - Take. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "nullable": false
                            },
                            "type": "array"
                        },
                        "createdTime": {
                            "description": "A combined UTC date and time string that describes the created time of the snapshot. E.g. 2018-12-25T11:41:02.2331413Z.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "id": {
                            "description": "Snapshot id.",
                            "format": "uuid",
                            "type": "string"
                        },
                        "lastUpdateTime": {
                            "description": "A combined UTC date and time string that describes the last time when the snapshot was created or updated by Snapshot - Update. E.g. 2018-12-25T11:51:27.8705696Z.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of the source object in the snapshot, specified by the subscriber who created the snapshot when calling Snapshot - Take. Currently FaceList, PersonGroup, LargeFaceList and LargePersonGroup are supported.",
                            "enum": [
                                "FaceList",
                                "LargeFaceList",
                                "LargePersonGroup",
                                "PersonGroup"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "modelAsString": false,
                                "name": "SnapshotObjectType"
                            }
                        },
                        "userData": {
                            "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                            "maxLength": 16384,
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "account",
                        "type",
                        "applyScope",
                        "createdTime",
                        "lastUpdateTime"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "TakeSnapshotRequest": {
                "description": "Request body for taking snapshot operation.",
                "properties": {
                    "applyScope": {
                        "description": "User specified array of target Face subscription ids for the snapshot. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "nullable": false
                        },
                        "type": "array"
                    },
                    "objectId": {
                        "description": "User specified source object id to take snapshot from.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    },
                    "type": {
                        "description": "User specified type for the source object to take snapshot from. Currently FaceList, PersonGroup, LargeFaceList and LargePersonGroup are supported.",
                        "enum": [
                            "FaceList",
                            "LargeFaceList",
                            "LargePersonGroup",
                            "PersonGroup"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "SnapshotObjectType"
                        }
                    },
                    "userData": {
                        "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                        "maxLength": 16384,
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "objectId",
                    "applyScope"
                ],
                "type": "object"
            },
            "TrainingStatus": {
                "description": "Training status object.",
                "properties": {
                    "createdDateTime": {
                        "description": "A combined UTC date and time string that describes the created time of the person group, large person group or large face list.",
                        "format": "date-time",
                        "type": "string",
                        "x-ms-client-name": "created"
                    },
                    "lastActionDateTime": {
                        "description": "A combined UTC date and time string that describes the last modify time of the person group, large person group or large face list, could be null value when the group is not successfully trained.",
                        "format": "date-time",
                        "type": "string",
                        "x-ms-client-name": "lastAction"
                    },
                    "lastSuccessfulTrainingDateTime": {
                        "description": "A combined UTC date and time string that describes the last successful training time of the person group, large person group or large face list.",
                        "format": "date-time",
                        "type": "string",
                        "x-ms-client-name": "lastSuccessfulTraining"
                    },
                    "message": {
                        "description": "Show failure message when training failed (omitted when training succeed).",
                        "type": "string"
                    },
                    "status": {
                        "description": "Training status: notstarted, running, succeeded, failed. If the training process is waiting to perform, the status is notstarted. If the training is ongoing, the status is running. Status succeed means this person group or large person group is ready for Face - Identify, or this large face list is ready for Face - Find Similar. Status failed is often caused by no person or no persisted face exist in the person group or large person group, or no persisted face exist in the large face list.",
                        "enum": [
                            "nonstarted",
                            "running",
                            "succeeded",
                            "failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "TrainingStatusType"
                        }
                    }
                },
                "required": [
                    "status",
                    "createdDateTime"
                ],
                "type": "object"
            },
            "UpdateFaceRequest": {
                "description": "Request to update face data.",
                "properties": {
                    "userData": {
                        "description": "User-provided data attached to the face. The size limit is 1KB.",
                        "maxLength": 1024,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateSnapshotRequest": {
                "description": "Request body for updating a snapshot, with a combination of user defined apply scope and user specified data.",
                "properties": {
                    "applyScope": {
                        "description": "Array of the target Face subscription ids for the snapshot, specified by the user who created the snapshot when calling Snapshot - Take. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.",
                        "items": {
                            "format": "uuid",
                            "type": "string",
                            "nullable": false
                        },
                        "type": "array"
                    },
                    "userData": {
                        "description": "User specified data about the snapshot for any purpose. Length should not exceed 16KB.",
                        "maxLength": 16384,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VerifyFaceToFaceRequest": {
                "description": "Request body for face to face verification.",
                "properties": {
                    "faceId1": {
                        "description": "FaceId of the first face, comes from Face - Detect",
                        "format": "uuid",
                        "type": "string"
                    },
                    "faceId2": {
                        "description": "FaceId of the second face, comes from Face - Detect",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "faceId1",
                    "faceId2"
                ],
                "type": "object"
            },
            "VerifyFaceToPersonRequest": {
                "description": "Request body for face to person verification.",
                "properties": {
                    "faceId": {
                        "description": "FaceId of the face, comes from Face - Detect",
                        "format": "uuid",
                        "type": "string"
                    },
                    "largePersonGroupId": {
                        "description": "Using existing largePersonGroupId and personId for fast loading a specified person. largePersonGroupId is created in LargePersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    },
                    "personGroupId": {
                        "description": "Using existing personGroupId and personId for fast loading a specified person. personGroupId is created in PersonGroup - Create. Parameter personGroupId and largePersonGroupId should not be provided at the same time.",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9-_]+$",
                        "type": "string"
                    },
                    "personId": {
                        "description": "Specify a certain person in a person group or a large person group. personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "faceId",
                    "personId"
                ],
                "type": "object"
            },
            "VerifyResult": {
                "description": "Result of the verify operation.",
                "properties": {
                    "confidence": {
                        "description": "A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override \"isIdentical\" and fine-tune the result on their own data.",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number"
                    },
                    "isIdentical": {
                        "description": "True if the two faces belong to the same person or the face belongs to the person, otherwise false.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "isIdentical",
                    "confidence"
                ],
                "type": "object"
            }
        },
        "parameters": {
            "Endpoint": {
                "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
                "in": "path",
                "name": "Endpoint",
                "required": true,
                "x-ms-parameter-location": "client",
                "x-ms-skip-url-encoding": true,
                "schema": {
                    "type": "string"
                },
                "allowReserved": true
            },
            "applyScope": {
                "description": "User specified snapshot apply scopes as a search filter. ApplyScope is an array of the target Azure subscription ids for the snapshot, specified by the user who created the snapshot by Snapshot - Take.",
                "in": "query",
                "name": "applyScope",
                "required": false,
                "x-ms-parameter-location": "method",
                "style": "form",
                "schema": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "nullable": false
                    }
                }
            },
            "faceListId": {
                "description": "Id referencing a particular face list.",
                "in": "path",
                "name": "faceListId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "pattern": "^[a-z0-9-_]+$"
                }
            },
            "faceUserData": {
                "description": "User-specified data about the face for any purpose. The maximum length is 1KB.",
                "in": "query",
                "name": "userData",
                "required": false,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "maxLength": 1024
                }
            },
            "largeFaceListId": {
                "description": "Id referencing a particular large face list.",
                "in": "path",
                "name": "largeFaceListId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "pattern": "^[a-z0-9-_]+$"
                }
            },
            "largePersonGroupId": {
                "description": "Id referencing a particular large person group.",
                "in": "path",
                "name": "largePersonGroupId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "pattern": "^[a-z0-9-_]+$"
                }
            },
            "operationId": {
                "description": "Id referencing a particular take/apply snapshot operation.",
                "in": "path",
                "name": "operationId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "persistedFaceId": {
                "description": "Id referencing a particular persistedFaceId of an existing face.",
                "in": "path",
                "name": "persistedFaceId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "personGroupId": {
                "description": "Id referencing a particular person group.",
                "in": "path",
                "name": "personGroupId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "maxLength": 64,
                    "pattern": "^[a-z0-9-_]+$"
                }
            },
            "personId": {
                "description": "Id referencing a particular person.",
                "in": "path",
                "name": "personId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "returnFaceAttributes": {
                "description": "Analyze and return the one or more specified face attributes in the comma-separated string like \"returnFaceAttributes=age,gender\". Supported face attributes include age, gender, headPose, smile, facialHair, glasses and emotion. Note that each face attribute analysis has additional computational and time cost.",
                "in": "query",
                "name": "returnFaceAttributes",
                "required": false,
                "x-ms-parameter-location": "method",
                "style": "form",
                "schema": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "age",
                            "gender",
                            "headPose",
                            "smile",
                            "facialHair",
                            "glasses",
                            "emotion",
                            "hair",
                            "makeup",
                            "occlusion",
                            "accessories",
                            "blur",
                            "exposure",
                            "noise"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "FaceAttributeType"
                        },
                        "nullable": false
                    }
                }
            },
            "snapshotId": {
                "description": "Id referencing a particular snapshot.",
                "in": "path",
                "name": "snapshotId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "targetFace": {
                "description": "A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\". E.g. \"targetFace=10,10,100,100\". If there is more than one face in the image, targetFace is required to specify which face to add. No targetFace means there is only one face detected in the entire image.",
                "in": "query",
                "name": "targetFace",
                "required": false,
                "x-ms-parameter-location": "method",
                "style": "form",
                "schema": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "maxItems": 4,
                        "minItems": 4,
                        "type": "integer",
                        "nullable": false
                    }
                }
            }
        },
        "requestBodies": {
            "Face_DetectWithUrlImageurl": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "url": {
                                    "description": "Publicly reachable URL of an image",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "url"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "A JSON document with a URL pointing to the image that is to be analyzed.",
                "required": true
            },
            "LargeFaceList_UpdateFaceBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "Request to update face data.",
                            "properties": {
                                "userData": {
                                    "description": "User-provided data attached to the face. The size limit is 1KB.",
                                    "maxLength": 1024,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Request body for updating persisted face.",
                "required": true
            },
            "LargePersonGroupPerson_CreateBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                            "properties": {
                                "name": {
                                    "description": "User defined name, maximum length is 128.",
                                    "maxLength": 128,
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User specified data. Length should not exceed 16KB.",
                                    "maxLength": 16384,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Request body for creating new person.",
                "required": true
            },
            "LargePersonGroupPerson_UpdateBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "A combination of user defined name and user specified data for the person, largePersonGroup/personGroup, and largeFaceList/faceList.",
                            "properties": {
                                "name": {
                                    "description": "User defined name, maximum length is 128.",
                                    "maxLength": 128,
                                    "type": "string"
                                },
                                "userData": {
                                    "description": "User specified data. Length should not exceed 16KB.",
                                    "maxLength": 16384,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Request body for person update operation.",
                "required": true
            },
            "Face_DetectWithStreamImage": {
                "content": {
                    "application/octet-stream": {
                        "schema": {
                            "format": "file",
                            "type": "object"
                        }
                    }
                },
                "description": "An image stream.",
                "required": true
            }
        },
        "securitySchemes": {
            "apim_key": {
                "in": "header",
                "name": "Ocp-Apim-Subscription-Key",
                "type": "apiKey"
            }
        }
    }
}